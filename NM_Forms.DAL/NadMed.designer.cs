#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NM_Forms.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NM_Forms")]
	public partial class NadMedDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBankDetail(BankDetail instance);
    partial void UpdateBankDetail(BankDetail instance);
    partial void DeleteBankDetail(BankDetail instance);
    partial void Insertwebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Updatewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void Deletewebpages_UsersInRole(webpages_UsersInRole instance);
    partial void InsertBedType(BedType instance);
    partial void UpdateBedType(BedType instance);
    partial void DeleteBedType(BedType instance);
    partial void InsertBusiness_Discipline(Business_Discipline instance);
    partial void UpdateBusiness_Discipline(Business_Discipline instance);
    partial void DeleteBusiness_Discipline(Business_Discipline instance);
    partial void InsertBusinesstype(Businesstype instance);
    partial void UpdateBusinesstype(Businesstype instance);
    partial void DeleteBusinesstype(Businesstype instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertClientEducation(ClientEducation instance);
    partial void UpdateClientEducation(ClientEducation instance);
    partial void DeleteClientEducation(ClientEducation instance);
    partial void InsertClientInsurance(ClientInsurance instance);
    partial void UpdateClientInsurance(ClientInsurance instance);
    partial void DeleteClientInsurance(ClientInsurance instance);
    partial void InsertClientmaster_Log(Clientmaster_Log instance);
    partial void UpdateClientmaster_Log(Clientmaster_Log instance);
    partial void DeleteClientmaster_Log(Clientmaster_Log instance);
    partial void InsertClientStatus(ClientStatus instance);
    partial void UpdateClientStatus(ClientStatus instance);
    partial void DeleteClientStatus(ClientStatus instance);
    partial void InsertFactility_Type(Factility_Type instance);
    partial void UpdateFactility_Type(Factility_Type instance);
    partial void DeleteFactility_Type(Factility_Type instance);
    partial void InsertLimit_PerClaim(Limit_PerClaim instance);
    partial void UpdateLimit_PerClaim(Limit_PerClaim instance);
    partial void DeleteLimit_PerClaim(Limit_PerClaim instance);
    partial void InsertLimit_PerPeriod(Limit_PerPeriod instance);
    partial void UpdateLimit_PerPeriod(Limit_PerPeriod instance);
    partial void DeleteLimit_PerPeriod(Limit_PerPeriod instance);
    partial void InsertLog_type(Log_type instance);
    partial void UpdateLog_type(Log_type instance);
    partial void DeleteLog_type(Log_type instance);
    partial void InsertProfileCorp(ProfileCorp instance);
    partial void UpdateProfileCorp(ProfileCorp instance);
    partial void DeleteProfileCorp(ProfileCorp instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertStats_Grid(Stats_Grid instance);
    partial void UpdateStats_Grid(Stats_Grid instance);
    partial void DeleteStats_Grid(Stats_Grid instance);
    partial void InsertSuburb(Suburb instance);
    partial void UpdateSuburb(Suburb instance);
    partial void DeleteSuburb(Suburb instance);
    partial void InsertTitle(Title instance);
    partial void UpdateTitle(Title instance);
    partial void DeleteTitle(Title instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void Insertwebpages_Membership(webpages_Membership instance);
    partial void Updatewebpages_Membership(webpages_Membership instance);
    partial void Deletewebpages_Membership(webpages_Membership instance);
    partial void Insertwebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Updatewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Deletewebpages_OAuthMembership(webpages_OAuthMembership instance);
    partial void Insertwebpages_Role(webpages_Role instance);
    partial void Updatewebpages_Role(webpages_Role instance);
    partial void Deletewebpages_Role(webpages_Role instance);
    partial void InsertClientMaster(ClientMaster instance);
    partial void UpdateClientMaster(ClientMaster instance);
    partial void DeleteClientMaster(ClientMaster instance);
    partial void InsertQuoteRequest(QuoteRequest instance);
    partial void UpdateQuoteRequest(QuoteRequest instance);
    partial void DeleteQuoteRequest(QuoteRequest instance);
    partial void InsertQuoteFeedback(QuoteFeedback instance);
    partial void UpdateQuoteFeedback(QuoteFeedback instance);
    partial void DeleteQuoteFeedback(QuoteFeedback instance);
    partial void InsertInsurer(Insurer instance);
    partial void UpdateInsurer(Insurer instance);
    partial void DeleteInsurer(Insurer instance);
    #endregion
		
		public NadMedDataContext() : 
				base(global::NM_Forms.DAL.Properties.Settings.Default.NM_FormsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NadMedDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NadMedDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NadMedDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NadMedDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BankDetail> BankDetails
		{
			get
			{
				return this.GetTable<BankDetail>();
			}
		}
		
		public System.Data.Linq.Table<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this.GetTable<webpages_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<BedType> BedTypes
		{
			get
			{
				return this.GetTable<BedType>();
			}
		}
		
		public System.Data.Linq.Table<Business_Discipline> Business_Disciplines
		{
			get
			{
				return this.GetTable<Business_Discipline>();
			}
		}
		
		public System.Data.Linq.Table<Businesstype> Businesstypes
		{
			get
			{
				return this.GetTable<Businesstype>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ClientEducation> ClientEducations
		{
			get
			{
				return this.GetTable<ClientEducation>();
			}
		}
		
		public System.Data.Linq.Table<ClientInsurance> ClientInsurances
		{
			get
			{
				return this.GetTable<ClientInsurance>();
			}
		}
		
		public System.Data.Linq.Table<Clientmaster_Log> Clientmaster_Logs
		{
			get
			{
				return this.GetTable<Clientmaster_Log>();
			}
		}
		
		public System.Data.Linq.Table<ClientStatus> ClientStatus
		{
			get
			{
				return this.GetTable<ClientStatus>();
			}
		}
		
		public System.Data.Linq.Table<Factility_Type> Factility_Types
		{
			get
			{
				return this.GetTable<Factility_Type>();
			}
		}
		
		public System.Data.Linq.Table<Limit_PerClaim> Limit_PerClaims
		{
			get
			{
				return this.GetTable<Limit_PerClaim>();
			}
		}
		
		public System.Data.Linq.Table<Limit_PerPeriod> Limit_PerPeriods
		{
			get
			{
				return this.GetTable<Limit_PerPeriod>();
			}
		}
		
		public System.Data.Linq.Table<Log_type> Log_types
		{
			get
			{
				return this.GetTable<Log_type>();
			}
		}
		
		public System.Data.Linq.Table<ProfileCorp> ProfileCorps
		{
			get
			{
				return this.GetTable<ProfileCorp>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<Stats_Grid> Stats_Grids
		{
			get
			{
				return this.GetTable<Stats_Grid>();
			}
		}
		
		public System.Data.Linq.Table<Suburb> Suburbs
		{
			get
			{
				return this.GetTable<Suburb>();
			}
		}
		
		public System.Data.Linq.Table<Title> Titles
		{
			get
			{
				return this.GetTable<Title>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Membership> webpages_Memberships
		{
			get
			{
				return this.GetTable<webpages_Membership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_OAuthMembership> webpages_OAuthMemberships
		{
			get
			{
				return this.GetTable<webpages_OAuthMembership>();
			}
		}
		
		public System.Data.Linq.Table<webpages_Role> webpages_Roles
		{
			get
			{
				return this.GetTable<webpages_Role>();
			}
		}
		
		public System.Data.Linq.Table<ClientMaster> ClientMasters
		{
			get
			{
				return this.GetTable<ClientMaster>();
			}
		}
		
		public System.Data.Linq.Table<QuoteRequest> QuoteRequests
		{
			get
			{
				return this.GetTable<QuoteRequest>();
			}
		}
		
		public System.Data.Linq.Table<QuoteFeedback> QuoteFeedbacks
		{
			get
			{
				return this.GetTable<QuoteFeedback>();
			}
		}
		
		public System.Data.Linq.Table<Insurer> Insurers
		{
			get
			{
				return this.GetTable<Insurer>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getClientsAwaitingQuotes")]
		public ISingleResult<getClientsAwaitingQuotesResult> getClientsAwaitingQuotes()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getClientsAwaitingQuotesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankDetails")]
	public partial class BankDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankDetails_ID;
		
		private System.Nullable<int> _ClientMaster_ID;
		
		private System.Nullable<int> _Bank_Name_ID;
		
		private string _Bank_Name;
		
		private string _Bank_Branch;
		
		private string _Bank_Code;
		
		private string _Bank_Account;
		
		private System.Nullable<int> _Bank_Type_ID;
		
		private string _Bank_Type;
		
		private System.Nullable<int> _Bank_Frequency_ID;
		
		private string _Bank_Frequency;
		
		private System.Nullable<bool> _Declaration_Bank;
		
		private System.Nullable<System.DateTime> _Acceptance_Bank;
		
		private EntityRef<ClientMaster> _ClientMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankDetails_IDChanging(int value);
    partial void OnBankDetails_IDChanged();
    partial void OnClientMaster_IDChanging(System.Nullable<int> value);
    partial void OnClientMaster_IDChanged();
    partial void OnBank_Name_IDChanging(System.Nullable<int> value);
    partial void OnBank_Name_IDChanged();
    partial void OnBank_NameChanging(string value);
    partial void OnBank_NameChanged();
    partial void OnBank_BranchChanging(string value);
    partial void OnBank_BranchChanged();
    partial void OnBank_CodeChanging(string value);
    partial void OnBank_CodeChanged();
    partial void OnBank_AccountChanging(string value);
    partial void OnBank_AccountChanged();
    partial void OnBank_Type_IDChanging(System.Nullable<int> value);
    partial void OnBank_Type_IDChanged();
    partial void OnBank_TypeChanging(string value);
    partial void OnBank_TypeChanged();
    partial void OnBank_Frequency_IDChanging(System.Nullable<int> value);
    partial void OnBank_Frequency_IDChanged();
    partial void OnBank_FrequencyChanging(string value);
    partial void OnBank_FrequencyChanged();
    partial void OnDeclaration_BankChanging(System.Nullable<bool> value);
    partial void OnDeclaration_BankChanged();
    partial void OnAcceptance_BankChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptance_BankChanged();
    #endregion
		
		public BankDetail()
		{
			this._ClientMaster = default(EntityRef<ClientMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDetails_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankDetails_ID
		{
			get
			{
				return this._BankDetails_ID;
			}
			set
			{
				if ((this._BankDetails_ID != value))
				{
					this.OnBankDetails_IDChanging(value);
					this.SendPropertyChanging();
					this._BankDetails_ID = value;
					this.SendPropertyChanged("BankDetails_ID");
					this.OnBankDetails_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", DbType="Int")]
		public System.Nullable<int> ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					if (this._ClientMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Name_ID", DbType="Int")]
		public System.Nullable<int> Bank_Name_ID
		{
			get
			{
				return this._Bank_Name_ID;
			}
			set
			{
				if ((this._Bank_Name_ID != value))
				{
					this.OnBank_Name_IDChanging(value);
					this.SendPropertyChanging();
					this._Bank_Name_ID = value;
					this.SendPropertyChanged("Bank_Name_ID");
					this.OnBank_Name_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Name", DbType="NVarChar(50)")]
		public string Bank_Name
		{
			get
			{
				return this._Bank_Name;
			}
			set
			{
				if ((this._Bank_Name != value))
				{
					this.OnBank_NameChanging(value);
					this.SendPropertyChanging();
					this._Bank_Name = value;
					this.SendPropertyChanged("Bank_Name");
					this.OnBank_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Branch", DbType="NVarChar(50)")]
		public string Bank_Branch
		{
			get
			{
				return this._Bank_Branch;
			}
			set
			{
				if ((this._Bank_Branch != value))
				{
					this.OnBank_BranchChanging(value);
					this.SendPropertyChanging();
					this._Bank_Branch = value;
					this.SendPropertyChanged("Bank_Branch");
					this.OnBank_BranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Code", DbType="NVarChar(50)")]
		public string Bank_Code
		{
			get
			{
				return this._Bank_Code;
			}
			set
			{
				if ((this._Bank_Code != value))
				{
					this.OnBank_CodeChanging(value);
					this.SendPropertyChanging();
					this._Bank_Code = value;
					this.SendPropertyChanged("Bank_Code");
					this.OnBank_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Account", DbType="NVarChar(50)")]
		public string Bank_Account
		{
			get
			{
				return this._Bank_Account;
			}
			set
			{
				if ((this._Bank_Account != value))
				{
					this.OnBank_AccountChanging(value);
					this.SendPropertyChanging();
					this._Bank_Account = value;
					this.SendPropertyChanged("Bank_Account");
					this.OnBank_AccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Type_ID", DbType="Int")]
		public System.Nullable<int> Bank_Type_ID
		{
			get
			{
				return this._Bank_Type_ID;
			}
			set
			{
				if ((this._Bank_Type_ID != value))
				{
					this.OnBank_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Bank_Type_ID = value;
					this.SendPropertyChanged("Bank_Type_ID");
					this.OnBank_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Type", DbType="NVarChar(50)")]
		public string Bank_Type
		{
			get
			{
				return this._Bank_Type;
			}
			set
			{
				if ((this._Bank_Type != value))
				{
					this.OnBank_TypeChanging(value);
					this.SendPropertyChanging();
					this._Bank_Type = value;
					this.SendPropertyChanged("Bank_Type");
					this.OnBank_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Frequency_ID", DbType="Int")]
		public System.Nullable<int> Bank_Frequency_ID
		{
			get
			{
				return this._Bank_Frequency_ID;
			}
			set
			{
				if ((this._Bank_Frequency_ID != value))
				{
					this.OnBank_Frequency_IDChanging(value);
					this.SendPropertyChanging();
					this._Bank_Frequency_ID = value;
					this.SendPropertyChanged("Bank_Frequency_ID");
					this.OnBank_Frequency_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Frequency", DbType="NVarChar(50)")]
		public string Bank_Frequency
		{
			get
			{
				return this._Bank_Frequency;
			}
			set
			{
				if ((this._Bank_Frequency != value))
				{
					this.OnBank_FrequencyChanging(value);
					this.SendPropertyChanging();
					this._Bank_Frequency = value;
					this.SendPropertyChanged("Bank_Frequency");
					this.OnBank_FrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Declaration_Bank", DbType="Bit")]
		public System.Nullable<bool> Declaration_Bank
		{
			get
			{
				return this._Declaration_Bank;
			}
			set
			{
				if ((this._Declaration_Bank != value))
				{
					this.OnDeclaration_BankChanging(value);
					this.SendPropertyChanging();
					this._Declaration_Bank = value;
					this.SendPropertyChanged("Declaration_Bank");
					this.OnDeclaration_BankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance_Bank", DbType="DateTime")]
		public System.Nullable<System.DateTime> Acceptance_Bank
		{
			get
			{
				return this._Acceptance_Bank;
			}
			set
			{
				if ((this._Acceptance_Bank != value))
				{
					this.OnAcceptance_BankChanging(value);
					this.SendPropertyChanging();
					this._Acceptance_Bank = value;
					this.SendPropertyChanged("Acceptance_Bank");
					this.OnAcceptance_BankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_BankDetail", Storage="_ClientMaster", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID", IsForeignKey=true)]
		public ClientMaster ClientMaster
		{
			get
			{
				return this._ClientMaster.Entity;
			}
			set
			{
				ClientMaster previousValue = this._ClientMaster.Entity;
				if (((previousValue != value) 
							|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientMaster.Entity = null;
						previousValue.BankDetails.Remove(this);
					}
					this._ClientMaster.Entity = value;
					if ((value != null))
					{
						value.BankDetails.Add(this);
						this._ClientMaster_ID = value.ClientMaster_ID;
					}
					else
					{
						this._ClientMaster_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ClientMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_UsersInRoles")]
	public partial class webpages_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RoleId;
		
		private EntityRef<UserProfile> _UserProfile;
		
		private EntityRef<webpages_Role> _webpages_Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public webpages_UsersInRole()
		{
			this._UserProfile = default(EntityRef<UserProfile>);
			this._webpages_Role = default(EntityRef<webpages_Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._UserProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._webpages_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_UserProfile", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public UserProfile UserProfile
		{
			get
			{
				return this._UserProfile.Entity;
			}
			set
			{
				UserProfile previousValue = this._UserProfile.Entity;
				if (((previousValue != value) 
							|| (this._UserProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserProfile.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._UserProfile.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("UserProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public webpages_Role webpages_Role
		{
			get
			{
				return this._webpages_Role.Entity;
			}
			set
			{
				webpages_Role previousValue = this._webpages_Role.Entity;
				if (((previousValue != value) 
							|| (this._webpages_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._webpages_Role.Entity = null;
						previousValue.webpages_UsersInRoles.Remove(this);
					}
					this._webpages_Role.Entity = value;
					if ((value != null))
					{
						value.webpages_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(int);
					}
					this.SendPropertyChanged("webpages_Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BedTypes")]
	public partial class BedType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BedTypeID;
		
		private string _BedType1;
		
		private EntitySet<Stats_Grid> _Stats_Grids;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBedTypeIDChanging(int value);
    partial void OnBedTypeIDChanged();
    partial void OnBedType1Changing(string value);
    partial void OnBedType1Changed();
    #endregion
		
		public BedType()
		{
			this._Stats_Grids = new EntitySet<Stats_Grid>(new Action<Stats_Grid>(this.attach_Stats_Grids), new Action<Stats_Grid>(this.detach_Stats_Grids));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BedTypeID
		{
			get
			{
				return this._BedTypeID;
			}
			set
			{
				if ((this._BedTypeID != value))
				{
					this.OnBedTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BedTypeID = value;
					this.SendPropertyChanged("BedTypeID");
					this.OnBedTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="BedType", Storage="_BedType1", DbType="NVarChar(50)")]
		public string BedType1
		{
			get
			{
				return this._BedType1;
			}
			set
			{
				if ((this._BedType1 != value))
				{
					this.OnBedType1Changing(value);
					this.SendPropertyChanging();
					this._BedType1 = value;
					this.SendPropertyChanged("BedType1");
					this.OnBedType1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BedType_Stats_Grid", Storage="_Stats_Grids", ThisKey="BedTypeID", OtherKey="BedTypeD")]
		public EntitySet<Stats_Grid> Stats_Grids
		{
			get
			{
				return this._Stats_Grids;
			}
			set
			{
				this._Stats_Grids.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stats_Grids(Stats_Grid entity)
		{
			this.SendPropertyChanging();
			entity.BedType = this;
		}
		
		private void detach_Stats_Grids(Stats_Grid entity)
		{
			this.SendPropertyChanging();
			entity.BedType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Business_Disciplines")]
	public partial class Business_Discipline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Business_Discipline_ID;
		
		private int _Businesstype_ID;
		
		private string _Business_Discipline_Name;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
		private EntityRef<Businesstype> _Businesstype;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusiness_Discipline_IDChanging(int value);
    partial void OnBusiness_Discipline_IDChanged();
    partial void OnBusinesstype_IDChanging(int value);
    partial void OnBusinesstype_IDChanged();
    partial void OnBusiness_Discipline_NameChanging(string value);
    partial void OnBusiness_Discipline_NameChanged();
    #endregion
		
		public Business_Discipline()
		{
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			this._Businesstype = default(EntityRef<Businesstype>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Discipline_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Business_Discipline_ID
		{
			get
			{
				return this._Business_Discipline_ID;
			}
			set
			{
				if ((this._Business_Discipline_ID != value))
				{
					this.OnBusiness_Discipline_IDChanging(value);
					this.SendPropertyChanging();
					this._Business_Discipline_ID = value;
					this.SendPropertyChanged("Business_Discipline_ID");
					this.OnBusiness_Discipline_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Businesstype_ID", DbType="Int NOT NULL")]
		public int Businesstype_ID
		{
			get
			{
				return this._Businesstype_ID;
			}
			set
			{
				if ((this._Businesstype_ID != value))
				{
					if (this._Businesstype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinesstype_IDChanging(value);
					this.SendPropertyChanging();
					this._Businesstype_ID = value;
					this.SendPropertyChanged("Businesstype_ID");
					this.OnBusinesstype_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Discipline_Name", DbType="NVarChar(50)")]
		public string Business_Discipline_Name
		{
			get
			{
				return this._Business_Discipline_Name;
			}
			set
			{
				if ((this._Business_Discipline_Name != value))
				{
					this.OnBusiness_Discipline_NameChanging(value);
					this.SendPropertyChanging();
					this._Business_Discipline_Name = value;
					this.SendPropertyChanged("Business_Discipline_Name");
					this.OnBusiness_Discipline_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Discipline_QuoteRequest", Storage="_QuoteRequests", ThisKey="Business_Discipline_ID", OtherKey="Business_Discipline_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Businesstype_Business_Discipline", Storage="_Businesstype", ThisKey="Businesstype_ID", OtherKey="Businesstype_ID", IsForeignKey=true)]
		public Businesstype Businesstype
		{
			get
			{
				return this._Businesstype.Entity;
			}
			set
			{
				Businesstype previousValue = this._Businesstype.Entity;
				if (((previousValue != value) 
							|| (this._Businesstype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Businesstype.Entity = null;
						previousValue.Business_Disciplines.Remove(this);
					}
					this._Businesstype.Entity = value;
					if ((value != null))
					{
						value.Business_Disciplines.Add(this);
						this._Businesstype_ID = value.Businesstype_ID;
					}
					else
					{
						this._Businesstype_ID = default(int);
					}
					this.SendPropertyChanged("Businesstype");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Business_Discipline1 = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Business_Discipline1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Businesstypes")]
	public partial class Businesstype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Businesstype_ID;
		
		private string _Businesstype_Name;
		
		private EntitySet<Business_Discipline> _Business_Disciplines;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinesstype_IDChanging(int value);
    partial void OnBusinesstype_IDChanged();
    partial void OnBusinesstype_NameChanging(string value);
    partial void OnBusinesstype_NameChanged();
    #endregion
		
		public Businesstype()
		{
			this._Business_Disciplines = new EntitySet<Business_Discipline>(new Action<Business_Discipline>(this.attach_Business_Disciplines), new Action<Business_Discipline>(this.detach_Business_Disciplines));
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Businesstype_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Businesstype_ID
		{
			get
			{
				return this._Businesstype_ID;
			}
			set
			{
				if ((this._Businesstype_ID != value))
				{
					this.OnBusinesstype_IDChanging(value);
					this.SendPropertyChanging();
					this._Businesstype_ID = value;
					this.SendPropertyChanged("Businesstype_ID");
					this.OnBusinesstype_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Businesstype_Name", DbType="NVarChar(50)")]
		public string Businesstype_Name
		{
			get
			{
				return this._Businesstype_Name;
			}
			set
			{
				if ((this._Businesstype_Name != value))
				{
					this.OnBusinesstype_NameChanging(value);
					this.SendPropertyChanging();
					this._Businesstype_Name = value;
					this.SendPropertyChanged("Businesstype_Name");
					this.OnBusinesstype_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Businesstype_Business_Discipline", Storage="_Business_Disciplines", ThisKey="Businesstype_ID", OtherKey="Businesstype_ID")]
		public EntitySet<Business_Discipline> Business_Disciplines
		{
			get
			{
				return this._Business_Disciplines;
			}
			set
			{
				this._Business_Disciplines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Businesstype_QuoteRequest", Storage="_QuoteRequests", ThisKey="Businesstype_ID", OtherKey="Businesstype_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Business_Disciplines(Business_Discipline entity)
		{
			this.SendPropertyChanging();
			entity.Businesstype = this;
		}
		
		private void detach_Business_Disciplines(Business_Discipline entity)
		{
			this.SendPropertyChanging();
			entity.Businesstype = null;
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Businesstype = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Businesstype = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cities")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private string _CityName;
		
		private System.Nullable<int> _ProvinceID;
		
		private EntitySet<ClientMaster> _ClientMasters;
		
		private EntitySet<ClientMaster> _ClientMasters1;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnProvinceIDChanging(System.Nullable<int> value);
    partial void OnProvinceIDChanged();
    #endregion
		
		public City()
		{
			this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
			this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="NVarChar(50)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int")]
		public System.Nullable<int> ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ClientMaster", Storage="_ClientMasters", ThisKey="CityID", OtherKey="Postal_Address_CityID")]
		public EntitySet<ClientMaster> ClientMasters
		{
			get
			{
				return this._ClientMasters;
			}
			set
			{
				this._ClientMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ClientMaster1", Storage="_ClientMasters1", ThisKey="CityID", OtherKey="Practice_Address_CityID")]
		public EntitySet<ClientMaster> ClientMasters1
		{
			get
			{
				return this._ClientMasters1;
			}
			set
			{
				this._ClientMasters1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Province", ThisKey="ProvinceID", OtherKey="ProvinceID", IsForeignKey=true)]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._ProvinceID = value.ProvinceID;
					}
					else
					{
						this._ProvinceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_ClientMasters1(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.City1 = this;
		}
		
		private void detach_ClientMasters1(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.City1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientEducation")]
	public partial class ClientEducation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientEducationID;
		
		private System.Nullable<int> _ClientMaster_ID;
		
		private string _Qualification;
		
		private string _Institution;
		
		private System.Nullable<int> _Year;
		
		private string _City;
		
		private EntityRef<ClientMaster> _ClientMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientEducationIDChanging(int value);
    partial void OnClientEducationIDChanged();
    partial void OnClientMaster_IDChanging(System.Nullable<int> value);
    partial void OnClientMaster_IDChanged();
    partial void OnQualificationChanging(string value);
    partial void OnQualificationChanged();
    partial void OnInstitutionChanging(string value);
    partial void OnInstitutionChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public ClientEducation()
		{
			this._ClientMaster = default(EntityRef<ClientMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientEducationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientEducationID
		{
			get
			{
				return this._ClientEducationID;
			}
			set
			{
				if ((this._ClientEducationID != value))
				{
					this.OnClientEducationIDChanging(value);
					this.SendPropertyChanging();
					this._ClientEducationID = value;
					this.SendPropertyChanged("ClientEducationID");
					this.OnClientEducationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", DbType="Int")]
		public System.Nullable<int> ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					if (this._ClientMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualification", DbType="NVarChar(50)")]
		public string Qualification
		{
			get
			{
				return this._Qualification;
			}
			set
			{
				if ((this._Qualification != value))
				{
					this.OnQualificationChanging(value);
					this.SendPropertyChanging();
					this._Qualification = value;
					this.SendPropertyChanged("Qualification");
					this.OnQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institution", DbType="NVarChar(50)")]
		public string Institution
		{
			get
			{
				return this._Institution;
			}
			set
			{
				if ((this._Institution != value))
				{
					this.OnInstitutionChanging(value);
					this.SendPropertyChanging();
					this._Institution = value;
					this.SendPropertyChanged("Institution");
					this.OnInstitutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientEducation", Storage="_ClientMaster", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID", IsForeignKey=true)]
		public ClientMaster ClientMaster
		{
			get
			{
				return this._ClientMaster.Entity;
			}
			set
			{
				ClientMaster previousValue = this._ClientMaster.Entity;
				if (((previousValue != value) 
							|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientMaster.Entity = null;
						previousValue.ClientEducations.Remove(this);
					}
					this._ClientMaster.Entity = value;
					if ((value != null))
					{
						value.ClientEducations.Add(this);
						this._ClientMaster_ID = value.ClientMaster_ID;
					}
					else
					{
						this._ClientMaster_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ClientMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientInsurance")]
	public partial class ClientInsurance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientInsurance_ID;
		
		private int _ClientMaster_ID;
		
		private System.Nullable<int> _QuoteFeedback_ID;
		
		private System.Nullable<System.DateTime> _Acceptance_Datetime;
		
		private System.Nullable<System.Guid> _Renewal_DateTime;
		
		private System.Nullable<bool> _Active_YN;
		
		private string _Active_Reason;
		
		private EntityRef<ClientMaster> _ClientMaster;
		
		private EntityRef<QuoteFeedback> _QuoteFeedback;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientInsurance_IDChanging(int value);
    partial void OnClientInsurance_IDChanged();
    partial void OnClientMaster_IDChanging(int value);
    partial void OnClientMaster_IDChanged();
    partial void OnQuoteFeedback_IDChanging(System.Nullable<int> value);
    partial void OnQuoteFeedback_IDChanged();
    partial void OnAcceptance_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptance_DatetimeChanged();
    partial void OnRenewal_DateTimeChanging(System.Nullable<System.Guid> value);
    partial void OnRenewal_DateTimeChanged();
    partial void OnActive_YNChanging(System.Nullable<bool> value);
    partial void OnActive_YNChanged();
    partial void OnActive_ReasonChanging(string value);
    partial void OnActive_ReasonChanged();
    #endregion
		
		public ClientInsurance()
		{
			this._ClientMaster = default(EntityRef<ClientMaster>);
			this._QuoteFeedback = default(EntityRef<QuoteFeedback>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientInsurance_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientInsurance_ID
		{
			get
			{
				return this._ClientInsurance_ID;
			}
			set
			{
				if ((this._ClientInsurance_ID != value))
				{
					this.OnClientInsurance_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientInsurance_ID = value;
					this.SendPropertyChanged("ClientInsurance_ID");
					this.OnClientInsurance_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					if (this._ClientMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteFeedback_ID", DbType="Int")]
		public System.Nullable<int> QuoteFeedback_ID
		{
			get
			{
				return this._QuoteFeedback_ID;
			}
			set
			{
				if ((this._QuoteFeedback_ID != value))
				{
					if (this._QuoteFeedback.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteFeedback_IDChanging(value);
					this.SendPropertyChanging();
					this._QuoteFeedback_ID = value;
					this.SendPropertyChanged("QuoteFeedback_ID");
					this.OnQuoteFeedback_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Acceptance_Datetime
		{
			get
			{
				return this._Acceptance_Datetime;
			}
			set
			{
				if ((this._Acceptance_Datetime != value))
				{
					this.OnAcceptance_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Acceptance_Datetime = value;
					this.SendPropertyChanged("Acceptance_Datetime");
					this.OnAcceptance_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Renewal_DateTime", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Renewal_DateTime
		{
			get
			{
				return this._Renewal_DateTime;
			}
			set
			{
				if ((this._Renewal_DateTime != value))
				{
					this.OnRenewal_DateTimeChanging(value);
					this.SendPropertyChanging();
					this._Renewal_DateTime = value;
					this.SendPropertyChanged("Renewal_DateTime");
					this.OnRenewal_DateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_YN", DbType="Bit")]
		public System.Nullable<bool> Active_YN
		{
			get
			{
				return this._Active_YN;
			}
			set
			{
				if ((this._Active_YN != value))
				{
					this.OnActive_YNChanging(value);
					this.SendPropertyChanging();
					this._Active_YN = value;
					this.SendPropertyChanged("Active_YN");
					this.OnActive_YNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_Reason", DbType="NVarChar(1000)")]
		public string Active_Reason
		{
			get
			{
				return this._Active_Reason;
			}
			set
			{
				if ((this._Active_Reason != value))
				{
					this.OnActive_ReasonChanging(value);
					this.SendPropertyChanging();
					this._Active_Reason = value;
					this.SendPropertyChanged("Active_Reason");
					this.OnActive_ReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientInsurance", Storage="_ClientMaster", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID", IsForeignKey=true)]
		public ClientMaster ClientMaster
		{
			get
			{
				return this._ClientMaster.Entity;
			}
			set
			{
				ClientMaster previousValue = this._ClientMaster.Entity;
				if (((previousValue != value) 
							|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientMaster.Entity = null;
						previousValue.ClientInsurances.Remove(this);
					}
					this._ClientMaster.Entity = value;
					if ((value != null))
					{
						value.ClientInsurances.Add(this);
						this._ClientMaster_ID = value.ClientMaster_ID;
					}
					else
					{
						this._ClientMaster_ID = default(int);
					}
					this.SendPropertyChanged("ClientMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteFeedback_ClientInsurance", Storage="_QuoteFeedback", ThisKey="QuoteFeedback_ID", OtherKey="QuoteFeedback_ID", IsForeignKey=true)]
		public QuoteFeedback QuoteFeedback
		{
			get
			{
				return this._QuoteFeedback.Entity;
			}
			set
			{
				QuoteFeedback previousValue = this._QuoteFeedback.Entity;
				if (((previousValue != value) 
							|| (this._QuoteFeedback.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteFeedback.Entity = null;
						previousValue.ClientInsurances.Remove(this);
					}
					this._QuoteFeedback.Entity = value;
					if ((value != null))
					{
						value.ClientInsurances.Add(this);
						this._QuoteFeedback_ID = value.QuoteFeedback_ID;
					}
					else
					{
						this._QuoteFeedback_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("QuoteFeedback");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientmaster_Logs")]
	public partial class Clientmaster_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Clientmaster_Log_ID;
		
		private System.Nullable<int> _ClientMaster_ID;
		
		private System.Nullable<int> _Log_type_ID;
		
		private string _Log_Details;
		
		private System.Nullable<System.DateTime> _Log_Datetime;
		
		private EntityRef<Log_type> _Log_type;
		
		private EntityRef<ClientMaster> _ClientMaster;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientmaster_Log_IDChanging(int value);
    partial void OnClientmaster_Log_IDChanged();
    partial void OnClientMaster_IDChanging(System.Nullable<int> value);
    partial void OnClientMaster_IDChanged();
    partial void OnLog_type_IDChanging(System.Nullable<int> value);
    partial void OnLog_type_IDChanged();
    partial void OnLog_DetailsChanging(string value);
    partial void OnLog_DetailsChanged();
    partial void OnLog_DatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLog_DatetimeChanged();
    #endregion
		
		public Clientmaster_Log()
		{
			this._Log_type = default(EntityRef<Log_type>);
			this._ClientMaster = default(EntityRef<ClientMaster>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clientmaster_Log_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Clientmaster_Log_ID
		{
			get
			{
				return this._Clientmaster_Log_ID;
			}
			set
			{
				if ((this._Clientmaster_Log_ID != value))
				{
					this.OnClientmaster_Log_IDChanging(value);
					this.SendPropertyChanging();
					this._Clientmaster_Log_ID = value;
					this.SendPropertyChanged("Clientmaster_Log_ID");
					this.OnClientmaster_Log_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", DbType="Int")]
		public System.Nullable<int> ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					if (this._ClientMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_type_ID", DbType="Int")]
		public System.Nullable<int> Log_type_ID
		{
			get
			{
				return this._Log_type_ID;
			}
			set
			{
				if ((this._Log_type_ID != value))
				{
					if (this._Log_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLog_type_IDChanging(value);
					this.SendPropertyChanging();
					this._Log_type_ID = value;
					this.SendPropertyChanged("Log_type_ID");
					this.OnLog_type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Details", DbType="NVarChar(500)")]
		public string Log_Details
		{
			get
			{
				return this._Log_Details;
			}
			set
			{
				if ((this._Log_Details != value))
				{
					this.OnLog_DetailsChanging(value);
					this.SendPropertyChanging();
					this._Log_Details = value;
					this.SendPropertyChanged("Log_Details");
					this.OnLog_DetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Log_Datetime
		{
			get
			{
				return this._Log_Datetime;
			}
			set
			{
				if ((this._Log_Datetime != value))
				{
					this.OnLog_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Log_Datetime = value;
					this.SendPropertyChanged("Log_Datetime");
					this.OnLog_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Log_type_Clientmaster_Log", Storage="_Log_type", ThisKey="Log_type_ID", OtherKey="Log_type_ID", IsForeignKey=true)]
		public Log_type Log_type
		{
			get
			{
				return this._Log_type.Entity;
			}
			set
			{
				Log_type previousValue = this._Log_type.Entity;
				if (((previousValue != value) 
							|| (this._Log_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Log_type.Entity = null;
						previousValue.Clientmaster_Logs.Remove(this);
					}
					this._Log_type.Entity = value;
					if ((value != null))
					{
						value.Clientmaster_Logs.Add(this);
						this._Log_type_ID = value.Log_type_ID;
					}
					else
					{
						this._Log_type_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Log_type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_Clientmaster_Log", Storage="_ClientMaster", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID", IsForeignKey=true)]
		public ClientMaster ClientMaster
		{
			get
			{
				return this._ClientMaster.Entity;
			}
			set
			{
				ClientMaster previousValue = this._ClientMaster.Entity;
				if (((previousValue != value) 
							|| (this._ClientMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientMaster.Entity = null;
						previousValue.Clientmaster_Logs.Remove(this);
					}
					this._ClientMaster.Entity = value;
					if ((value != null))
					{
						value.Clientmaster_Logs.Add(this);
						this._ClientMaster_ID = value.ClientMaster_ID;
					}
					else
					{
						this._ClientMaster_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ClientMaster");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientStatus")]
	public partial class ClientStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientStatusID;
		
		private string _ClientStatusName;
		
		private EntitySet<ClientMaster> _ClientMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientStatusIDChanging(int value);
    partial void OnClientStatusIDChanged();
    partial void OnClientStatusNameChanging(string value);
    partial void OnClientStatusNameChanged();
    #endregion
		
		public ClientStatus()
		{
			this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientStatusID
		{
			get
			{
				return this._ClientStatusID;
			}
			set
			{
				if ((this._ClientStatusID != value))
				{
					this.OnClientStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ClientStatusID = value;
					this.SendPropertyChanged("ClientStatusID");
					this.OnClientStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatusName", DbType="NVarChar(50)")]
		public string ClientStatusName
		{
			get
			{
				return this._ClientStatusName;
			}
			set
			{
				if ((this._ClientStatusName != value))
				{
					this.OnClientStatusNameChanging(value);
					this.SendPropertyChanging();
					this._ClientStatusName = value;
					this.SendPropertyChanged("ClientStatusName");
					this.OnClientStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientStatus_ClientMaster", Storage="_ClientMasters", ThisKey="ClientStatusID", OtherKey="ClientStatusID")]
		public EntitySet<ClientMaster> ClientMasters
		{
			get
			{
				return this._ClientMasters;
			}
			set
			{
				this._ClientMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.ClientStatus = this;
		}
		
		private void detach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.ClientStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factility_Types")]
	public partial class Factility_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Factility_Type_ID;
		
		private string _Factility_Type_Name;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFactility_Type_IDChanging(int value);
    partial void OnFactility_Type_IDChanged();
    partial void OnFactility_Type_NameChanging(string value);
    partial void OnFactility_Type_NameChanged();
    #endregion
		
		public Factility_Type()
		{
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factility_Type_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Factility_Type_ID
		{
			get
			{
				return this._Factility_Type_ID;
			}
			set
			{
				if ((this._Factility_Type_ID != value))
				{
					this.OnFactility_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Factility_Type_ID = value;
					this.SendPropertyChanged("Factility_Type_ID");
					this.OnFactility_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factility_Type_Name", DbType="NVarChar(50)")]
		public string Factility_Type_Name
		{
			get
			{
				return this._Factility_Type_Name;
			}
			set
			{
				if ((this._Factility_Type_Name != value))
				{
					this.OnFactility_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Factility_Type_Name = value;
					this.SendPropertyChanged("Factility_Type_Name");
					this.OnFactility_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factility_Type_QuoteRequest", Storage="_QuoteRequests", ThisKey="Factility_Type_ID", OtherKey="Factility_Type_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Factility_Type1 = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Factility_Type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Limit_PerClaim")]
	public partial class Limit_PerClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Limit_PerClaim_ID;
		
		private string _Limit_PerClaim1;
		
		private System.Nullable<bool> _ActiveYN;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLimit_PerClaim_IDChanging(int value);
    partial void OnLimit_PerClaim_IDChanged();
    partial void OnLimit_PerClaim1Changing(string value);
    partial void OnLimit_PerClaim1Changed();
    partial void OnActiveYNChanging(System.Nullable<bool> value);
    partial void OnActiveYNChanged();
    #endregion
		
		public Limit_PerClaim()
		{
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerClaim_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Limit_PerClaim_ID
		{
			get
			{
				return this._Limit_PerClaim_ID;
			}
			set
			{
				if ((this._Limit_PerClaim_ID != value))
				{
					this.OnLimit_PerClaim_IDChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerClaim_ID = value;
					this.SendPropertyChanged("Limit_PerClaim_ID");
					this.OnLimit_PerClaim_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Limit_PerClaim", Storage="_Limit_PerClaim1", DbType="NVarChar(50)")]
		public string Limit_PerClaim1
		{
			get
			{
				return this._Limit_PerClaim1;
			}
			set
			{
				if ((this._Limit_PerClaim1 != value))
				{
					this.OnLimit_PerClaim1Changing(value);
					this.SendPropertyChanging();
					this._Limit_PerClaim1 = value;
					this.SendPropertyChanged("Limit_PerClaim1");
					this.OnLimit_PerClaim1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveYN", DbType="Bit")]
		public System.Nullable<bool> ActiveYN
		{
			get
			{
				return this._ActiveYN;
			}
			set
			{
				if ((this._ActiveYN != value))
				{
					this.OnActiveYNChanging(value);
					this.SendPropertyChanging();
					this._ActiveYN = value;
					this.SendPropertyChanged("ActiveYN");
					this.OnActiveYNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_PerClaim_QuoteRequest", Storage="_QuoteRequests", ThisKey="Limit_PerClaim_ID", OtherKey="Limit_PerClaim_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Limit_PerClaim1 = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Limit_PerClaim1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Limit_PerPeriod")]
	public partial class Limit_PerPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Limit_PerPeriod_ID;
		
		private string _Limit_PerPeriod1;
		
		private System.Nullable<bool> _ActiveYN;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLimit_PerPeriod_IDChanging(int value);
    partial void OnLimit_PerPeriod_IDChanged();
    partial void OnLimit_PerPeriod1Changing(string value);
    partial void OnLimit_PerPeriod1Changed();
    partial void OnActiveYNChanging(System.Nullable<bool> value);
    partial void OnActiveYNChanged();
    #endregion
		
		public Limit_PerPeriod()
		{
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerPeriod_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Limit_PerPeriod_ID
		{
			get
			{
				return this._Limit_PerPeriod_ID;
			}
			set
			{
				if ((this._Limit_PerPeriod_ID != value))
				{
					this.OnLimit_PerPeriod_IDChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerPeriod_ID = value;
					this.SendPropertyChanged("Limit_PerPeriod_ID");
					this.OnLimit_PerPeriod_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Limit_PerPeriod", Storage="_Limit_PerPeriod1", DbType="NVarChar(50)")]
		public string Limit_PerPeriod1
		{
			get
			{
				return this._Limit_PerPeriod1;
			}
			set
			{
				if ((this._Limit_PerPeriod1 != value))
				{
					this.OnLimit_PerPeriod1Changing(value);
					this.SendPropertyChanging();
					this._Limit_PerPeriod1 = value;
					this.SendPropertyChanged("Limit_PerPeriod1");
					this.OnLimit_PerPeriod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveYN", DbType="Bit")]
		public System.Nullable<bool> ActiveYN
		{
			get
			{
				return this._ActiveYN;
			}
			set
			{
				if ((this._ActiveYN != value))
				{
					this.OnActiveYNChanging(value);
					this.SendPropertyChanging();
					this._ActiveYN = value;
					this.SendPropertyChanged("ActiveYN");
					this.OnActiveYNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_PerPeriod_QuoteRequest", Storage="_QuoteRequests", ThisKey="Limit_PerPeriod_ID", OtherKey="Limit_PerPeriod_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Limit_PerPeriod1 = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Limit_PerPeriod1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_types")]
	public partial class Log_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Log_type_ID;
		
		private string _Log_type_Desc;
		
		private EntitySet<Clientmaster_Log> _Clientmaster_Logs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLog_type_IDChanging(int value);
    partial void OnLog_type_IDChanged();
    partial void OnLog_type_DescChanging(string value);
    partial void OnLog_type_DescChanged();
    #endregion
		
		public Log_type()
		{
			this._Clientmaster_Logs = new EntitySet<Clientmaster_Log>(new Action<Clientmaster_Log>(this.attach_Clientmaster_Logs), new Action<Clientmaster_Log>(this.detach_Clientmaster_Logs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_type_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Log_type_ID
		{
			get
			{
				return this._Log_type_ID;
			}
			set
			{
				if ((this._Log_type_ID != value))
				{
					this.OnLog_type_IDChanging(value);
					this.SendPropertyChanging();
					this._Log_type_ID = value;
					this.SendPropertyChanged("Log_type_ID");
					this.OnLog_type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_type_Desc", DbType="NVarChar(50)")]
		public string Log_type_Desc
		{
			get
			{
				return this._Log_type_Desc;
			}
			set
			{
				if ((this._Log_type_Desc != value))
				{
					this.OnLog_type_DescChanging(value);
					this.SendPropertyChanging();
					this._Log_type_Desc = value;
					this.SendPropertyChanged("Log_type_Desc");
					this.OnLog_type_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Log_type_Clientmaster_Log", Storage="_Clientmaster_Logs", ThisKey="Log_type_ID", OtherKey="Log_type_ID")]
		public EntitySet<Clientmaster_Log> Clientmaster_Logs
		{
			get
			{
				return this._Clientmaster_Logs;
			}
			set
			{
				this._Clientmaster_Logs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientmaster_Logs(Clientmaster_Log entity)
		{
			this.SendPropertyChanging();
			entity.Log_type = this;
		}
		
		private void detach_Clientmaster_Logs(Clientmaster_Log entity)
		{
			this.SendPropertyChanging();
			entity.Log_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileCorp")]
	public partial class ProfileCorp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ProfileCorpID;
		
		private System.Guid _QuoteRequestID;
		
		private string _Contact_Name;
		
		private string _Facility_Number;
		
		private string _Contact_Number;
		
		private string _Facility_Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileCorpIDChanging(System.Guid value);
    partial void OnProfileCorpIDChanged();
    partial void OnQuoteRequestIDChanging(System.Guid value);
    partial void OnQuoteRequestIDChanged();
    partial void OnContact_NameChanging(string value);
    partial void OnContact_NameChanged();
    partial void OnFacility_NumberChanging(string value);
    partial void OnFacility_NumberChanged();
    partial void OnContact_NumberChanging(string value);
    partial void OnContact_NumberChanged();
    partial void OnFacility_LocationChanging(string value);
    partial void OnFacility_LocationChanged();
    #endregion
		
		public ProfileCorp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileCorpID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ProfileCorpID
		{
			get
			{
				return this._ProfileCorpID;
			}
			set
			{
				if ((this._ProfileCorpID != value))
				{
					this.OnProfileCorpIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileCorpID = value;
					this.SendPropertyChanged("ProfileCorpID");
					this.OnProfileCorpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequestID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid QuoteRequestID
		{
			get
			{
				return this._QuoteRequestID;
			}
			set
			{
				if ((this._QuoteRequestID != value))
				{
					this.OnQuoteRequestIDChanging(value);
					this.SendPropertyChanging();
					this._QuoteRequestID = value;
					this.SendPropertyChanged("QuoteRequestID");
					this.OnQuoteRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Name", DbType="NVarChar(50)")]
		public string Contact_Name
		{
			get
			{
				return this._Contact_Name;
			}
			set
			{
				if ((this._Contact_Name != value))
				{
					this.OnContact_NameChanging(value);
					this.SendPropertyChanging();
					this._Contact_Name = value;
					this.SendPropertyChanged("Contact_Name");
					this.OnContact_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility_Number", DbType="NVarChar(50)")]
		public string Facility_Number
		{
			get
			{
				return this._Facility_Number;
			}
			set
			{
				if ((this._Facility_Number != value))
				{
					this.OnFacility_NumberChanging(value);
					this.SendPropertyChanging();
					this._Facility_Number = value;
					this.SendPropertyChanged("Facility_Number");
					this.OnFacility_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Number", DbType="NVarChar(50)")]
		public string Contact_Number
		{
			get
			{
				return this._Contact_Number;
			}
			set
			{
				if ((this._Contact_Number != value))
				{
					this.OnContact_NumberChanging(value);
					this.SendPropertyChanging();
					this._Contact_Number = value;
					this.SendPropertyChanged("Contact_Number");
					this.OnContact_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility_Location", DbType="NVarChar(250)")]
		public string Facility_Location
		{
			get
			{
				return this._Facility_Location;
			}
			set
			{
				if ((this._Facility_Location != value))
				{
					this.OnFacility_LocationChanging(value);
					this.SendPropertyChanging();
					this._Facility_Location = value;
					this.SendPropertyChanged("Facility_Location");
					this.OnFacility_LocationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provinces")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProvinceID;
		
		private string _ProvinceName;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvinceIDChanging(int value);
    partial void OnProvinceIDChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    #endregion
		
		public Province()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(50)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Cities", ThisKey="ProvinceID", OtherKey="ProvinceID")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stats_Grid")]
	public partial class Stats_Grid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stats_grid_ID;
		
		private System.Nullable<int> _BedTypeD;
		
		private System.Nullable<int> _AnnualNumberOfPatients;
		
		private System.Nullable<double> _AnnualRevenue;
		
		private EntitySet<QuoteRequest> _QuoteRequests;
		
		private EntityRef<BedType> _BedType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStats_grid_IDChanging(int value);
    partial void OnStats_grid_IDChanged();
    partial void OnBedTypeDChanging(System.Nullable<int> value);
    partial void OnBedTypeDChanged();
    partial void OnAnnualNumberOfPatientsChanging(System.Nullable<int> value);
    partial void OnAnnualNumberOfPatientsChanged();
    partial void OnAnnualRevenueChanging(System.Nullable<double> value);
    partial void OnAnnualRevenueChanged();
    #endregion
		
		public Stats_Grid()
		{
			this._QuoteRequests = new EntitySet<QuoteRequest>(new Action<QuoteRequest>(this.attach_QuoteRequests), new Action<QuoteRequest>(this.detach_QuoteRequests));
			this._BedType = default(EntityRef<BedType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_grid_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Stats_grid_ID
		{
			get
			{
				return this._Stats_grid_ID;
			}
			set
			{
				if ((this._Stats_grid_ID != value))
				{
					this.OnStats_grid_IDChanging(value);
					this.SendPropertyChanging();
					this._Stats_grid_ID = value;
					this.SendPropertyChanged("Stats_grid_ID");
					this.OnStats_grid_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedTypeD", DbType="Int")]
		public System.Nullable<int> BedTypeD
		{
			get
			{
				return this._BedTypeD;
			}
			set
			{
				if ((this._BedTypeD != value))
				{
					if (this._BedType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedTypeDChanging(value);
					this.SendPropertyChanging();
					this._BedTypeD = value;
					this.SendPropertyChanged("BedTypeD");
					this.OnBedTypeDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualNumberOfPatients", DbType="Int")]
		public System.Nullable<int> AnnualNumberOfPatients
		{
			get
			{
				return this._AnnualNumberOfPatients;
			}
			set
			{
				if ((this._AnnualNumberOfPatients != value))
				{
					this.OnAnnualNumberOfPatientsChanging(value);
					this.SendPropertyChanging();
					this._AnnualNumberOfPatients = value;
					this.SendPropertyChanged("AnnualNumberOfPatients");
					this.OnAnnualNumberOfPatientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualRevenue", DbType="Float")]
		public System.Nullable<double> AnnualRevenue
		{
			get
			{
				return this._AnnualRevenue;
			}
			set
			{
				if ((this._AnnualRevenue != value))
				{
					this.OnAnnualRevenueChanging(value);
					this.SendPropertyChanging();
					this._AnnualRevenue = value;
					this.SendPropertyChanged("AnnualRevenue");
					this.OnAnnualRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stats_Grid_QuoteRequest", Storage="_QuoteRequests", ThisKey="Stats_grid_ID", OtherKey="Stats_Grid_ID")]
		public EntitySet<QuoteRequest> QuoteRequests
		{
			get
			{
				return this._QuoteRequests;
			}
			set
			{
				this._QuoteRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BedType_Stats_Grid", Storage="_BedType", ThisKey="BedTypeD", OtherKey="BedTypeID", IsForeignKey=true)]
		public BedType BedType
		{
			get
			{
				return this._BedType.Entity;
			}
			set
			{
				BedType previousValue = this._BedType.Entity;
				if (((previousValue != value) 
							|| (this._BedType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BedType.Entity = null;
						previousValue.Stats_Grids.Remove(this);
					}
					this._BedType.Entity = value;
					if ((value != null))
					{
						value.Stats_Grids.Add(this);
						this._BedTypeD = value.BedTypeID;
					}
					else
					{
						this._BedTypeD = default(Nullable<int>);
					}
					this.SendPropertyChanged("BedType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Stats_Grid = this;
		}
		
		private void detach_QuoteRequests(QuoteRequest entity)
		{
			this.SendPropertyChanging();
			entity.Stats_Grid = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suburbs")]
	public partial class Suburb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuburbID;
		
		private int _CityID;
		
		private string _PostalCode;
		
		private EntitySet<ClientMaster> _ClientMasters;
		
		private EntitySet<ClientMaster> _ClientMasters1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuburbIDChanging(int value);
    partial void OnSuburbIDChanged();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    #endregion
		
		public Suburb()
		{
			this._ClientMasters = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters), new Action<ClientMaster>(this.detach_ClientMasters));
			this._ClientMasters1 = new EntitySet<ClientMaster>(new Action<ClientMaster>(this.attach_ClientMasters1), new Action<ClientMaster>(this.detach_ClientMasters1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuburbID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SuburbID
		{
			get
			{
				return this._SuburbID;
			}
			set
			{
				if ((this._SuburbID != value))
				{
					this.OnSuburbIDChanging(value);
					this.SendPropertyChanging();
					this._SuburbID = value;
					this.SendPropertyChanged("SuburbID");
					this.OnSuburbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int NOT NULL")]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suburb_ClientMaster", Storage="_ClientMasters", ThisKey="SuburbID", OtherKey="Postal_Address_SuburbID")]
		public EntitySet<ClientMaster> ClientMasters
		{
			get
			{
				return this._ClientMasters;
			}
			set
			{
				this._ClientMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suburb_ClientMaster1", Storage="_ClientMasters1", ThisKey="SuburbID", OtherKey="Practice_Address_SuburbID")]
		public EntitySet<ClientMaster> ClientMasters1
		{
			get
			{
				return this._ClientMasters1;
			}
			set
			{
				this._ClientMasters1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.Suburb = this;
		}
		
		private void detach_ClientMasters(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.Suburb = null;
		}
		
		private void attach_ClientMasters1(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.Suburb1 = this;
		}
		
		private void detach_ClientMasters1(ClientMaster entity)
		{
			this.SendPropertyChanging();
			entity.Suburb1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Titles")]
	public partial class Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TitleID;
		
		private string _TitleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTitleIDChanging(int value);
    partial void OnTitleIDChanged();
    partial void OnTitleNameChanging(string value);
    partial void OnTitleNameChanged();
    #endregion
		
		public Title()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TitleID
		{
			get
			{
				return this._TitleID;
			}
			set
			{
				if ((this._TitleID != value))
				{
					this.OnTitleIDChanging(value);
					this.SendPropertyChanging();
					this._TitleID = value;
					this.SendPropertyChanged("TitleID");
					this.OnTitleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="NVarChar(50)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this.OnTitleNameChanging(value);
					this.SendPropertyChanging();
					this._TitleName = value;
					this.SendPropertyChanged("TitleName");
					this.OnTitleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _UserName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public UserProfile()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(56) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserProfile_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.UserProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Membership")]
	public partial class webpages_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _ConfirmationToken;
		
		private System.Nullable<bool> _IsConfirmed;
		
		private System.Nullable<System.DateTime> _LastPasswordFailureDate;
		
		private int _PasswordFailuresSinceLastSuccess;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _PasswordChangedDate;
		
		private string _PasswordSalt;
		
		private string _PasswordVerificationToken;
		
		private System.Nullable<System.DateTime> _PasswordVerificationTokenExpirationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnConfirmationTokenChanging(string value);
    partial void OnConfirmationTokenChanged();
    partial void OnIsConfirmedChanging(System.Nullable<bool> value);
    partial void OnIsConfirmedChanged();
    partial void OnLastPasswordFailureDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPasswordFailureDateChanged();
    partial void OnPasswordFailuresSinceLastSuccessChanging(int value);
    partial void OnPasswordFailuresSinceLastSuccessChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordChangedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordChangedDateChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordVerificationTokenChanging(string value);
    partial void OnPasswordVerificationTokenChanged();
    partial void OnPasswordVerificationTokenExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordVerificationTokenExpirationDateChanged();
    #endregion
		
		public webpages_Membership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmationToken", DbType="NVarChar(128)")]
		public string ConfirmationToken
		{
			get
			{
				return this._ConfirmationToken;
			}
			set
			{
				if ((this._ConfirmationToken != value))
				{
					this.OnConfirmationTokenChanging(value);
					this.SendPropertyChanging();
					this._ConfirmationToken = value;
					this.SendPropertyChanged("ConfirmationToken");
					this.OnConfirmationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConfirmed", DbType="Bit")]
		public System.Nullable<bool> IsConfirmed
		{
			get
			{
				return this._IsConfirmed;
			}
			set
			{
				if ((this._IsConfirmed != value))
				{
					this.OnIsConfirmedChanging(value);
					this.SendPropertyChanging();
					this._IsConfirmed = value;
					this.SendPropertyChanged("IsConfirmed");
					this.OnIsConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordFailureDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPasswordFailureDate
		{
			get
			{
				return this._LastPasswordFailureDate;
			}
			set
			{
				if ((this._LastPasswordFailureDate != value))
				{
					this.OnLastPasswordFailureDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordFailureDate = value;
					this.SendPropertyChanged("LastPasswordFailureDate");
					this.OnLastPasswordFailureDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFailuresSinceLastSuccess", DbType="Int NOT NULL")]
		public int PasswordFailuresSinceLastSuccess
		{
			get
			{
				return this._PasswordFailuresSinceLastSuccess;
			}
			set
			{
				if ((this._PasswordFailuresSinceLastSuccess != value))
				{
					this.OnPasswordFailuresSinceLastSuccessChanging(value);
					this.SendPropertyChanging();
					this._PasswordFailuresSinceLastSuccess = value;
					this.SendPropertyChanged("PasswordFailuresSinceLastSuccess");
					this.OnPasswordFailuresSinceLastSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordChangedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this._PasswordChangedDate;
			}
			set
			{
				if ((this._PasswordChangedDate != value))
				{
					this.OnPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordChangedDate = value;
					this.SendPropertyChanged("PasswordChangedDate");
					this.OnPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationToken", DbType="NVarChar(128)")]
		public string PasswordVerificationToken
		{
			get
			{
				return this._PasswordVerificationToken;
			}
			set
			{
				if ((this._PasswordVerificationToken != value))
				{
					this.OnPasswordVerificationTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationToken = value;
					this.SendPropertyChanged("PasswordVerificationToken");
					this.OnPasswordVerificationTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordVerificationTokenExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordVerificationTokenExpirationDate
		{
			get
			{
				return this._PasswordVerificationTokenExpirationDate;
			}
			set
			{
				if ((this._PasswordVerificationTokenExpirationDate != value))
				{
					this.OnPasswordVerificationTokenExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._PasswordVerificationTokenExpirationDate = value;
					this.SendPropertyChanged("PasswordVerificationTokenExpirationDate");
					this.OnPasswordVerificationTokenExpirationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_OAuthMembership")]
	public partial class webpages_OAuthMembership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Provider;
		
		private string _ProviderUserId;
		
		private int _UserId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public webpages_OAuthMembership()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.webpages_Roles")]
	public partial class webpages_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _RoleName;
		
		private EntitySet<webpages_UsersInRole> _webpages_UsersInRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public webpages_Role()
		{
			this._webpages_UsersInRoles = new EntitySet<webpages_UsersInRole>(new Action<webpages_UsersInRole>(this.attach_webpages_UsersInRoles), new Action<webpages_UsersInRole>(this.detach_webpages_UsersInRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="webpages_Role_webpages_UsersInRole", Storage="_webpages_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<webpages_UsersInRole> webpages_UsersInRoles
		{
			get
			{
				return this._webpages_UsersInRoles;
			}
			set
			{
				this._webpages_UsersInRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = this;
		}
		
		private void detach_webpages_UsersInRoles(webpages_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.webpages_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientMaster")]
	public partial class ClientMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientMaster_ID;
		
		private System.Guid _UniqueID;
		
		private int _ClientStatusID;
		
		private string _Name_Title;
		
		private string _Name_First;
		
		private string _Name_Last;
		
		private string _Name_Initials;
		
		private string _Name_Preferred;
		
		private System.DateTime _Date_Birth;
		
		private string _REF_Identity;
		
		private string _REF_Practitioner;
		
		private string _REF_Practice;
		
		private string _REF_Registered_Name;
		
		private string _REF_Registration_Number;
		
		private string _REF_VAT;
		
		private string _Contact_Email;
		
		private string _Contact_Mobile;
		
		private string _Contact_Practice1;
		
		private string _Contact_Practice2;
		
		private string _Contact_Home1;
		
		private string _Postal_Address_1A;
		
		private string _Postal_Address_1B;
		
		private string _Postal_Address_1C;
		
		private string _Postal_Address_1D;
		
		private System.Nullable<int> _Postal_Address_SuburbID;
		
		private string _Postal_Address_1E;
		
		private System.Nullable<int> _Postal_Address_CityID;
		
		private string _Postal_Address_1F;
		
		private string _Postal_Address_1G;
		
		private string _Practice_Address_1A;
		
		private string _Practice_Address_1B;
		
		private string _Practice_Address_1C;
		
		private string _Practice_Address_1D;
		
		private System.Nullable<int> _Practice_Address_SuburbID;
		
		private string _Practice_Address_1E;
		
		private System.Nullable<int> _Practice_Address_CityID;
		
		private string _Practice_Address_1F;
		
		private string _Practice_Address_1G;
		
		private string _Facility_Number;
		
		private string _Facility_Location;
		
		private string _InitialKey;
		
		private bool _RequiresPasswordChange;
		
		private string _ProviderUserKey;
		
		private EntitySet<BankDetail> _BankDetails;
		
		private EntitySet<ClientEducation> _ClientEducations;
		
		private EntitySet<ClientInsurance> _ClientInsurances;
		
		private EntitySet<Clientmaster_Log> _Clientmaster_Logs;
		
		private EntityRef<City> _City;
		
		private EntityRef<City> _City1;
		
		private EntityRef<ClientStatus> _ClientStatus;
		
		private EntityRef<Suburb> _Suburb;
		
		private EntityRef<Suburb> _Suburb1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientMaster_IDChanging(int value);
    partial void OnClientMaster_IDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnClientStatusIDChanging(int value);
    partial void OnClientStatusIDChanged();
    partial void OnName_TitleChanging(string value);
    partial void OnName_TitleChanged();
    partial void OnName_FirstChanging(string value);
    partial void OnName_FirstChanged();
    partial void OnName_LastChanging(string value);
    partial void OnName_LastChanged();
    partial void OnName_InitialsChanging(string value);
    partial void OnName_InitialsChanged();
    partial void OnName_PreferredChanging(string value);
    partial void OnName_PreferredChanged();
    partial void OnDate_BirthChanging(System.DateTime value);
    partial void OnDate_BirthChanged();
    partial void OnREF_IdentityChanging(string value);
    partial void OnREF_IdentityChanged();
    partial void OnREF_PractitionerChanging(string value);
    partial void OnREF_PractitionerChanged();
    partial void OnREF_PracticeChanging(string value);
    partial void OnREF_PracticeChanged();
    partial void OnREF_Registered_NameChanging(string value);
    partial void OnREF_Registered_NameChanged();
    partial void OnREF_Registration_NumberChanging(string value);
    partial void OnREF_Registration_NumberChanged();
    partial void OnREF_VATChanging(string value);
    partial void OnREF_VATChanged();
    partial void OnContact_EmailChanging(string value);
    partial void OnContact_EmailChanged();
    partial void OnContact_MobileChanging(string value);
    partial void OnContact_MobileChanged();
    partial void OnContact_Practice1Changing(string value);
    partial void OnContact_Practice1Changed();
    partial void OnContact_Practice2Changing(string value);
    partial void OnContact_Practice2Changed();
    partial void OnContact_Home1Changing(string value);
    partial void OnContact_Home1Changed();
    partial void OnPostal_Address_1AChanging(string value);
    partial void OnPostal_Address_1AChanged();
    partial void OnPostal_Address_1BChanging(string value);
    partial void OnPostal_Address_1BChanged();
    partial void OnPostal_Address_1CChanging(string value);
    partial void OnPostal_Address_1CChanged();
    partial void OnPostal_Address_1DChanging(string value);
    partial void OnPostal_Address_1DChanged();
    partial void OnPostal_Address_SuburbIDChanging(System.Nullable<int> value);
    partial void OnPostal_Address_SuburbIDChanged();
    partial void OnPostal_Address_1EChanging(string value);
    partial void OnPostal_Address_1EChanged();
    partial void OnPostal_Address_CityIDChanging(System.Nullable<int> value);
    partial void OnPostal_Address_CityIDChanged();
    partial void OnPostal_Address_1FChanging(string value);
    partial void OnPostal_Address_1FChanged();
    partial void OnPostal_Address_1GChanging(string value);
    partial void OnPostal_Address_1GChanged();
    partial void OnPractice_Address_1AChanging(string value);
    partial void OnPractice_Address_1AChanged();
    partial void OnPractice_Address_1BChanging(string value);
    partial void OnPractice_Address_1BChanged();
    partial void OnPractice_Address_1CChanging(string value);
    partial void OnPractice_Address_1CChanged();
    partial void OnPractice_Address_1DChanging(string value);
    partial void OnPractice_Address_1DChanged();
    partial void OnPractice_Address_SuburbIDChanging(System.Nullable<int> value);
    partial void OnPractice_Address_SuburbIDChanged();
    partial void OnPractice_Address_1EChanging(string value);
    partial void OnPractice_Address_1EChanged();
    partial void OnPractice_Address_CityIDChanging(System.Nullable<int> value);
    partial void OnPractice_Address_CityIDChanged();
    partial void OnPractice_Address_1FChanging(string value);
    partial void OnPractice_Address_1FChanged();
    partial void OnPractice_Address_1GChanging(string value);
    partial void OnPractice_Address_1GChanged();
    partial void OnFacility_NumberChanging(string value);
    partial void OnFacility_NumberChanged();
    partial void OnFacility_LocationChanging(string value);
    partial void OnFacility_LocationChanged();
    partial void OnInitialKeyChanging(string value);
    partial void OnInitialKeyChanged();
    partial void OnRequiresPasswordChangeChanging(bool value);
    partial void OnRequiresPasswordChangeChanged();
    partial void OnProviderUserKeyChanging(string value);
    partial void OnProviderUserKeyChanged();
    #endregion
		
		public ClientMaster()
		{
			this._BankDetails = new EntitySet<BankDetail>(new Action<BankDetail>(this.attach_BankDetails), new Action<BankDetail>(this.detach_BankDetails));
			this._ClientEducations = new EntitySet<ClientEducation>(new Action<ClientEducation>(this.attach_ClientEducations), new Action<ClientEducation>(this.detach_ClientEducations));
			this._ClientInsurances = new EntitySet<ClientInsurance>(new Action<ClientInsurance>(this.attach_ClientInsurances), new Action<ClientInsurance>(this.detach_ClientInsurances));
			this._Clientmaster_Logs = new EntitySet<Clientmaster_Log>(new Action<Clientmaster_Log>(this.attach_Clientmaster_Logs), new Action<Clientmaster_Log>(this.detach_Clientmaster_Logs));
			this._City = default(EntityRef<City>);
			this._City1 = default(EntityRef<City>);
			this._ClientStatus = default(EntityRef<ClientStatus>);
			this._Suburb = default(EntityRef<Suburb>);
			this._Suburb1 = default(EntityRef<Suburb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientStatusID", DbType="Int NOT NULL")]
		public int ClientStatusID
		{
			get
			{
				return this._ClientStatusID;
			}
			set
			{
				if ((this._ClientStatusID != value))
				{
					if (this._ClientStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ClientStatusID = value;
					this.SendPropertyChanged("ClientStatusID");
					this.OnClientStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Title
		{
			get
			{
				return this._Name_Title;
			}
			set
			{
				if ((this._Name_Title != value))
				{
					this.OnName_TitleChanging(value);
					this.SendPropertyChanging();
					this._Name_Title = value;
					this.SendPropertyChanged("Name_Title");
					this.OnName_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_First", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_First
		{
			get
			{
				return this._Name_First;
			}
			set
			{
				if ((this._Name_First != value))
				{
					this.OnName_FirstChanging(value);
					this.SendPropertyChanging();
					this._Name_First = value;
					this.SendPropertyChanged("Name_First");
					this.OnName_FirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Last", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Last
		{
			get
			{
				return this._Name_Last;
			}
			set
			{
				if ((this._Name_Last != value))
				{
					this.OnName_LastChanging(value);
					this.SendPropertyChanging();
					this._Name_Last = value;
					this.SendPropertyChanged("Name_Last");
					this.OnName_LastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Initials", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Name_Initials
		{
			get
			{
				return this._Name_Initials;
			}
			set
			{
				if ((this._Name_Initials != value))
				{
					this.OnName_InitialsChanging(value);
					this.SendPropertyChanging();
					this._Name_Initials = value;
					this.SendPropertyChanged("Name_Initials");
					this.OnName_InitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Preferred", DbType="NVarChar(50)")]
		public string Name_Preferred
		{
			get
			{
				return this._Name_Preferred;
			}
			set
			{
				if ((this._Name_Preferred != value))
				{
					this.OnName_PreferredChanging(value);
					this.SendPropertyChanging();
					this._Name_Preferred = value;
					this.SendPropertyChanged("Name_Preferred");
					this.OnName_PreferredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Birth", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Birth
		{
			get
			{
				return this._Date_Birth;
			}
			set
			{
				if ((this._Date_Birth != value))
				{
					this.OnDate_BirthChanging(value);
					this.SendPropertyChanging();
					this._Date_Birth = value;
					this.SendPropertyChanged("Date_Birth");
					this.OnDate_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_Identity", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string REF_Identity
		{
			get
			{
				return this._REF_Identity;
			}
			set
			{
				if ((this._REF_Identity != value))
				{
					this.OnREF_IdentityChanging(value);
					this.SendPropertyChanging();
					this._REF_Identity = value;
					this.SendPropertyChanged("REF_Identity");
					this.OnREF_IdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_Practitioner", DbType="NVarChar(50)")]
		public string REF_Practitioner
		{
			get
			{
				return this._REF_Practitioner;
			}
			set
			{
				if ((this._REF_Practitioner != value))
				{
					this.OnREF_PractitionerChanging(value);
					this.SendPropertyChanging();
					this._REF_Practitioner = value;
					this.SendPropertyChanged("REF_Practitioner");
					this.OnREF_PractitionerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_Practice", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string REF_Practice
		{
			get
			{
				return this._REF_Practice;
			}
			set
			{
				if ((this._REF_Practice != value))
				{
					this.OnREF_PracticeChanging(value);
					this.SendPropertyChanging();
					this._REF_Practice = value;
					this.SendPropertyChanged("REF_Practice");
					this.OnREF_PracticeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_Registered_Name", DbType="NVarChar(50)")]
		public string REF_Registered_Name
		{
			get
			{
				return this._REF_Registered_Name;
			}
			set
			{
				if ((this._REF_Registered_Name != value))
				{
					this.OnREF_Registered_NameChanging(value);
					this.SendPropertyChanging();
					this._REF_Registered_Name = value;
					this.SendPropertyChanged("REF_Registered_Name");
					this.OnREF_Registered_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_Registration_Number", DbType="NVarChar(50)")]
		public string REF_Registration_Number
		{
			get
			{
				return this._REF_Registration_Number;
			}
			set
			{
				if ((this._REF_Registration_Number != value))
				{
					this.OnREF_Registration_NumberChanging(value);
					this.SendPropertyChanging();
					this._REF_Registration_Number = value;
					this.SendPropertyChanged("REF_Registration_Number");
					this.OnREF_Registration_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REF_VAT", DbType="NVarChar(50)")]
		public string REF_VAT
		{
			get
			{
				return this._REF_VAT;
			}
			set
			{
				if ((this._REF_VAT != value))
				{
					this.OnREF_VATChanging(value);
					this.SendPropertyChanging();
					this._REF_VAT = value;
					this.SendPropertyChanged("REF_VAT");
					this.OnREF_VATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contact_Email
		{
			get
			{
				return this._Contact_Email;
			}
			set
			{
				if ((this._Contact_Email != value))
				{
					this.OnContact_EmailChanging(value);
					this.SendPropertyChanging();
					this._Contact_Email = value;
					this.SendPropertyChanged("Contact_Email");
					this.OnContact_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Mobile", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string Contact_Mobile
		{
			get
			{
				return this._Contact_Mobile;
			}
			set
			{
				if ((this._Contact_Mobile != value))
				{
					this.OnContact_MobileChanging(value);
					this.SendPropertyChanging();
					this._Contact_Mobile = value;
					this.SendPropertyChanged("Contact_Mobile");
					this.OnContact_MobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Practice1", DbType="NVarChar(50)")]
		public string Contact_Practice1
		{
			get
			{
				return this._Contact_Practice1;
			}
			set
			{
				if ((this._Contact_Practice1 != value))
				{
					this.OnContact_Practice1Changing(value);
					this.SendPropertyChanging();
					this._Contact_Practice1 = value;
					this.SendPropertyChanged("Contact_Practice1");
					this.OnContact_Practice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Practice2", DbType="NVarChar(50)")]
		public string Contact_Practice2
		{
			get
			{
				return this._Contact_Practice2;
			}
			set
			{
				if ((this._Contact_Practice2 != value))
				{
					this.OnContact_Practice2Changing(value);
					this.SendPropertyChanging();
					this._Contact_Practice2 = value;
					this.SendPropertyChanged("Contact_Practice2");
					this.OnContact_Practice2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Home1", DbType="NVarChar(50)")]
		public string Contact_Home1
		{
			get
			{
				return this._Contact_Home1;
			}
			set
			{
				if ((this._Contact_Home1 != value))
				{
					this.OnContact_Home1Changing(value);
					this.SendPropertyChanging();
					this._Contact_Home1 = value;
					this.SendPropertyChanged("Contact_Home1");
					this.OnContact_Home1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1A", DbType="NVarChar(50)")]
		public string Postal_Address_1A
		{
			get
			{
				return this._Postal_Address_1A;
			}
			set
			{
				if ((this._Postal_Address_1A != value))
				{
					this.OnPostal_Address_1AChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1A = value;
					this.SendPropertyChanged("Postal_Address_1A");
					this.OnPostal_Address_1AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1B", DbType="NVarChar(50)")]
		public string Postal_Address_1B
		{
			get
			{
				return this._Postal_Address_1B;
			}
			set
			{
				if ((this._Postal_Address_1B != value))
				{
					this.OnPostal_Address_1BChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1B = value;
					this.SendPropertyChanged("Postal_Address_1B");
					this.OnPostal_Address_1BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1C", DbType="NVarChar(50)")]
		public string Postal_Address_1C
		{
			get
			{
				return this._Postal_Address_1C;
			}
			set
			{
				if ((this._Postal_Address_1C != value))
				{
					this.OnPostal_Address_1CChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1C = value;
					this.SendPropertyChanged("Postal_Address_1C");
					this.OnPostal_Address_1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1D", DbType="NVarChar(50)")]
		public string Postal_Address_1D
		{
			get
			{
				return this._Postal_Address_1D;
			}
			set
			{
				if ((this._Postal_Address_1D != value))
				{
					this.OnPostal_Address_1DChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1D = value;
					this.SendPropertyChanged("Postal_Address_1D");
					this.OnPostal_Address_1DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_SuburbID", DbType="Int")]
		public System.Nullable<int> Postal_Address_SuburbID
		{
			get
			{
				return this._Postal_Address_SuburbID;
			}
			set
			{
				if ((this._Postal_Address_SuburbID != value))
				{
					if (this._Suburb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostal_Address_SuburbIDChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_SuburbID = value;
					this.SendPropertyChanged("Postal_Address_SuburbID");
					this.OnPostal_Address_SuburbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1E", DbType="NVarChar(50)")]
		public string Postal_Address_1E
		{
			get
			{
				return this._Postal_Address_1E;
			}
			set
			{
				if ((this._Postal_Address_1E != value))
				{
					this.OnPostal_Address_1EChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1E = value;
					this.SendPropertyChanged("Postal_Address_1E");
					this.OnPostal_Address_1EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_CityID", DbType="Int")]
		public System.Nullable<int> Postal_Address_CityID
		{
			get
			{
				return this._Postal_Address_CityID;
			}
			set
			{
				if ((this._Postal_Address_CityID != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPostal_Address_CityIDChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_CityID = value;
					this.SendPropertyChanged("Postal_Address_CityID");
					this.OnPostal_Address_CityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1F", DbType="NVarChar(50)")]
		public string Postal_Address_1F
		{
			get
			{
				return this._Postal_Address_1F;
			}
			set
			{
				if ((this._Postal_Address_1F != value))
				{
					this.OnPostal_Address_1FChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1F = value;
					this.SendPropertyChanged("Postal_Address_1F");
					this.OnPostal_Address_1FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal_Address_1G", DbType="NVarChar(50)")]
		public string Postal_Address_1G
		{
			get
			{
				return this._Postal_Address_1G;
			}
			set
			{
				if ((this._Postal_Address_1G != value))
				{
					this.OnPostal_Address_1GChanging(value);
					this.SendPropertyChanging();
					this._Postal_Address_1G = value;
					this.SendPropertyChanged("Postal_Address_1G");
					this.OnPostal_Address_1GChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1A", DbType="NVarChar(50)")]
		public string Practice_Address_1A
		{
			get
			{
				return this._Practice_Address_1A;
			}
			set
			{
				if ((this._Practice_Address_1A != value))
				{
					this.OnPractice_Address_1AChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1A = value;
					this.SendPropertyChanged("Practice_Address_1A");
					this.OnPractice_Address_1AChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1B", DbType="NVarChar(50)")]
		public string Practice_Address_1B
		{
			get
			{
				return this._Practice_Address_1B;
			}
			set
			{
				if ((this._Practice_Address_1B != value))
				{
					this.OnPractice_Address_1BChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1B = value;
					this.SendPropertyChanged("Practice_Address_1B");
					this.OnPractice_Address_1BChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1C", DbType="NVarChar(50)")]
		public string Practice_Address_1C
		{
			get
			{
				return this._Practice_Address_1C;
			}
			set
			{
				if ((this._Practice_Address_1C != value))
				{
					this.OnPractice_Address_1CChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1C = value;
					this.SendPropertyChanged("Practice_Address_1C");
					this.OnPractice_Address_1CChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1D", DbType="NVarChar(50)")]
		public string Practice_Address_1D
		{
			get
			{
				return this._Practice_Address_1D;
			}
			set
			{
				if ((this._Practice_Address_1D != value))
				{
					this.OnPractice_Address_1DChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1D = value;
					this.SendPropertyChanged("Practice_Address_1D");
					this.OnPractice_Address_1DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_SuburbID", DbType="Int")]
		public System.Nullable<int> Practice_Address_SuburbID
		{
			get
			{
				return this._Practice_Address_SuburbID;
			}
			set
			{
				if ((this._Practice_Address_SuburbID != value))
				{
					if (this._Suburb1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPractice_Address_SuburbIDChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_SuburbID = value;
					this.SendPropertyChanged("Practice_Address_SuburbID");
					this.OnPractice_Address_SuburbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1E", DbType="NVarChar(50)")]
		public string Practice_Address_1E
		{
			get
			{
				return this._Practice_Address_1E;
			}
			set
			{
				if ((this._Practice_Address_1E != value))
				{
					this.OnPractice_Address_1EChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1E = value;
					this.SendPropertyChanged("Practice_Address_1E");
					this.OnPractice_Address_1EChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_CityID", DbType="Int")]
		public System.Nullable<int> Practice_Address_CityID
		{
			get
			{
				return this._Practice_Address_CityID;
			}
			set
			{
				if ((this._Practice_Address_CityID != value))
				{
					if (this._City1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPractice_Address_CityIDChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_CityID = value;
					this.SendPropertyChanged("Practice_Address_CityID");
					this.OnPractice_Address_CityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1F", DbType="NVarChar(50)")]
		public string Practice_Address_1F
		{
			get
			{
				return this._Practice_Address_1F;
			}
			set
			{
				if ((this._Practice_Address_1F != value))
				{
					this.OnPractice_Address_1FChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1F = value;
					this.SendPropertyChanged("Practice_Address_1F");
					this.OnPractice_Address_1FChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practice_Address_1G", DbType="NVarChar(50)")]
		public string Practice_Address_1G
		{
			get
			{
				return this._Practice_Address_1G;
			}
			set
			{
				if ((this._Practice_Address_1G != value))
				{
					this.OnPractice_Address_1GChanging(value);
					this.SendPropertyChanging();
					this._Practice_Address_1G = value;
					this.SendPropertyChanged("Practice_Address_1G");
					this.OnPractice_Address_1GChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility_Number", DbType="NVarChar(50)")]
		public string Facility_Number
		{
			get
			{
				return this._Facility_Number;
			}
			set
			{
				if ((this._Facility_Number != value))
				{
					this.OnFacility_NumberChanging(value);
					this.SendPropertyChanging();
					this._Facility_Number = value;
					this.SendPropertyChanged("Facility_Number");
					this.OnFacility_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facility_Location", DbType="NVarChar(50)")]
		public string Facility_Location
		{
			get
			{
				return this._Facility_Location;
			}
			set
			{
				if ((this._Facility_Location != value))
				{
					this.OnFacility_LocationChanging(value);
					this.SendPropertyChanging();
					this._Facility_Location = value;
					this.SendPropertyChanged("Facility_Location");
					this.OnFacility_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialKey", DbType="NVarChar(50)")]
		public string InitialKey
		{
			get
			{
				return this._InitialKey;
			}
			set
			{
				if ((this._InitialKey != value))
				{
					this.OnInitialKeyChanging(value);
					this.SendPropertyChanging();
					this._InitialKey = value;
					this.SendPropertyChanged("InitialKey");
					this.OnInitialKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresPasswordChange", DbType="Bit NOT NULL")]
		public bool RequiresPasswordChange
		{
			get
			{
				return this._RequiresPasswordChange;
			}
			set
			{
				if ((this._RequiresPasswordChange != value))
				{
					this.OnRequiresPasswordChangeChanging(value);
					this.SendPropertyChanging();
					this._RequiresPasswordChange = value;
					this.SendPropertyChanged("RequiresPasswordChange");
					this.OnRequiresPasswordChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserKey", DbType="NVarChar(50)")]
		public string ProviderUserKey
		{
			get
			{
				return this._ProviderUserKey;
			}
			set
			{
				if ((this._ProviderUserKey != value))
				{
					this.OnProviderUserKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserKey = value;
					this.SendPropertyChanged("ProviderUserKey");
					this.OnProviderUserKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_BankDetail", Storage="_BankDetails", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID")]
		public EntitySet<BankDetail> BankDetails
		{
			get
			{
				return this._BankDetails;
			}
			set
			{
				this._BankDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientEducation", Storage="_ClientEducations", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID")]
		public EntitySet<ClientEducation> ClientEducations
		{
			get
			{
				return this._ClientEducations;
			}
			set
			{
				this._ClientEducations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_ClientInsurance", Storage="_ClientInsurances", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID")]
		public EntitySet<ClientInsurance> ClientInsurances
		{
			get
			{
				return this._ClientInsurances;
			}
			set
			{
				this._ClientInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientMaster_Clientmaster_Log", Storage="_Clientmaster_Logs", ThisKey="ClientMaster_ID", OtherKey="ClientMaster_ID")]
		public EntitySet<Clientmaster_Log> Clientmaster_Logs
		{
			get
			{
				return this._Clientmaster_Logs;
			}
			set
			{
				this._Clientmaster_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ClientMaster", Storage="_City", ThisKey="Postal_Address_CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.ClientMasters.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.ClientMasters.Add(this);
						this._Postal_Address_CityID = value.CityID;
					}
					else
					{
						this._Postal_Address_CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_ClientMaster1", Storage="_City1", ThisKey="Practice_Address_CityID", OtherKey="CityID", IsForeignKey=true)]
		public City City1
		{
			get
			{
				return this._City1.Entity;
			}
			set
			{
				City previousValue = this._City1.Entity;
				if (((previousValue != value) 
							|| (this._City1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City1.Entity = null;
						previousValue.ClientMasters1.Remove(this);
					}
					this._City1.Entity = value;
					if ((value != null))
					{
						value.ClientMasters1.Add(this);
						this._Practice_Address_CityID = value.CityID;
					}
					else
					{
						this._Practice_Address_CityID = default(Nullable<int>);
					}
					this.SendPropertyChanged("City1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClientStatus_ClientMaster", Storage="_ClientStatus", ThisKey="ClientStatusID", OtherKey="ClientStatusID", IsForeignKey=true)]
		public ClientStatus ClientStatus
		{
			get
			{
				return this._ClientStatus.Entity;
			}
			set
			{
				ClientStatus previousValue = this._ClientStatus.Entity;
				if (((previousValue != value) 
							|| (this._ClientStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClientStatus.Entity = null;
						previousValue.ClientMasters.Remove(this);
					}
					this._ClientStatus.Entity = value;
					if ((value != null))
					{
						value.ClientMasters.Add(this);
						this._ClientStatusID = value.ClientStatusID;
					}
					else
					{
						this._ClientStatusID = default(int);
					}
					this.SendPropertyChanged("ClientStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suburb_ClientMaster", Storage="_Suburb", ThisKey="Postal_Address_SuburbID", OtherKey="SuburbID", IsForeignKey=true)]
		public Suburb Suburb
		{
			get
			{
				return this._Suburb.Entity;
			}
			set
			{
				Suburb previousValue = this._Suburb.Entity;
				if (((previousValue != value) 
							|| (this._Suburb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Suburb.Entity = null;
						previousValue.ClientMasters.Remove(this);
					}
					this._Suburb.Entity = value;
					if ((value != null))
					{
						value.ClientMasters.Add(this);
						this._Postal_Address_SuburbID = value.SuburbID;
					}
					else
					{
						this._Postal_Address_SuburbID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Suburb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Suburb_ClientMaster1", Storage="_Suburb1", ThisKey="Practice_Address_SuburbID", OtherKey="SuburbID", IsForeignKey=true)]
		public Suburb Suburb1
		{
			get
			{
				return this._Suburb1.Entity;
			}
			set
			{
				Suburb previousValue = this._Suburb1.Entity;
				if (((previousValue != value) 
							|| (this._Suburb1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Suburb1.Entity = null;
						previousValue.ClientMasters1.Remove(this);
					}
					this._Suburb1.Entity = value;
					if ((value != null))
					{
						value.ClientMasters1.Add(this);
						this._Practice_Address_SuburbID = value.SuburbID;
					}
					else
					{
						this._Practice_Address_SuburbID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Suburb1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankDetails(BankDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = this;
		}
		
		private void detach_BankDetails(BankDetail entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = null;
		}
		
		private void attach_ClientEducations(ClientEducation entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = this;
		}
		
		private void detach_ClientEducations(ClientEducation entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = null;
		}
		
		private void attach_ClientInsurances(ClientInsurance entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = this;
		}
		
		private void detach_ClientInsurances(ClientInsurance entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = null;
		}
		
		private void attach_Clientmaster_Logs(Clientmaster_Log entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = this;
		}
		
		private void detach_Clientmaster_Logs(Clientmaster_Log entity)
		{
			this.SendPropertyChanging();
			entity.ClientMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteRequest")]
	public partial class QuoteRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuoteRequest_ID;
		
		private System.Guid _UniqueID;
		
		private System.Nullable<int> _QuoteType;
		
		private int _ClientMaster_ID;
		
		private System.Nullable<int> _Businesstype_ID;
		
		private string _Business_Type;
		
		private int _Business_Discipline_ID;
		
		private string _Business_Discipline;
		
		private System.Nullable<int> _Limit_PerClaim_ID;
		
		private string _Limit_PerClaim;
		
		private System.Nullable<int> _Limit_PerPeriod_ID;
		
		private string _Limit_PerPeriod;
		
		private System.Nullable<double> _Stats_Private_Consultations;
		
		private System.Nullable<double> _Stats_Private_Procedures;
		
		private System.Nullable<double> _Stats_State_Consultations;
		
		private System.Nullable<double> _Stats_State_Procedures;
		
		private System.Nullable<double> _Stats_Private_Procedures_Income;
		
		private System.Nullable<double> _Stats_State_Procedures_Income;
		
		private System.Nullable<double> _Stats_Private_Consultations_Income;
		
		private System.Nullable<double> _Stats_State_Consultations_Income;
		
		private System.Nullable<double> _Stats_Caesarians;
		
		private System.Nullable<double> _Stats_NVD;
		
		private System.Nullable<double> _Stats_Hysterectomies;
		
		private string _Cover_Current_Provider;
		
		private System.Nullable<int> _Cover_Current_Years;
		
		private string _Stats_Surgery;
		
		private string _Claims_Enquiries;
		
		private string _Claims_Actual;
		
		private string _Claims_HPCSA;
		
		private string _Claims_Circumstances;
		
		private string _Material_Facts;
		
		private System.Nullable<bool> _Declaration_Quote;
		
		private System.Nullable<System.DateTime> _Acceptance_Quote;
		
		private System.Nullable<int> _Premium_Period_ID;
		
		private string _Premium_Period;
		
		private System.Nullable<int> _Factility_Type_ID;
		
		private string _Factility_Type;
		
		private System.Nullable<int> _Stats_Grid_ID;
		
		private System.Nullable<int> _Stats_Number_Of_Nursing_Staff;
		
		private System.Nullable<int> _Stats_Number_of_Births_Annual;
		
		private System.Nullable<int> _Stats_Number_of_Deaths_Annual;
		
		private System.Nullable<bool> _Authorize_Claims;
		
		private System.Nullable<System.DateTime> _Authorize_Claims_Date;
		
		private EntitySet<QuoteFeedback> _QuoteFeedbacks;
		
		private EntitySet<QuoteFeedback> _QuoteFeedbacks1;
		
		private EntityRef<Business_Discipline> _Business_Discipline1;
		
		private EntityRef<Businesstype> _Businesstype;
		
		private EntityRef<Limit_PerClaim> _Limit_PerClaim1;
		
		private EntityRef<Limit_PerPeriod> _Limit_PerPeriod1;
		
		private EntityRef<Factility_Type> _Factility_Type1;
		
		private EntityRef<Stats_Grid> _Stats_Grid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuoteRequest_IDChanging(int value);
    partial void OnQuoteRequest_IDChanged();
    partial void OnUniqueIDChanging(System.Guid value);
    partial void OnUniqueIDChanged();
    partial void OnQuoteTypeChanging(System.Nullable<int> value);
    partial void OnQuoteTypeChanged();
    partial void OnClientMaster_IDChanging(int value);
    partial void OnClientMaster_IDChanged();
    partial void OnBusinesstype_IDChanging(System.Nullable<int> value);
    partial void OnBusinesstype_IDChanged();
    partial void OnBusiness_TypeChanging(string value);
    partial void OnBusiness_TypeChanged();
    partial void OnBusiness_Discipline_IDChanging(int value);
    partial void OnBusiness_Discipline_IDChanged();
    partial void OnBusiness_DisciplineChanging(string value);
    partial void OnBusiness_DisciplineChanged();
    partial void OnLimit_PerClaim_IDChanging(System.Nullable<int> value);
    partial void OnLimit_PerClaim_IDChanged();
    partial void OnLimit_PerClaimChanging(string value);
    partial void OnLimit_PerClaimChanged();
    partial void OnLimit_PerPeriod_IDChanging(System.Nullable<int> value);
    partial void OnLimit_PerPeriod_IDChanged();
    partial void OnLimit_PerPeriodChanging(string value);
    partial void OnLimit_PerPeriodChanged();
    partial void OnStats_Private_ConsultationsChanging(System.Nullable<double> value);
    partial void OnStats_Private_ConsultationsChanged();
    partial void OnStats_Private_ProceduresChanging(System.Nullable<double> value);
    partial void OnStats_Private_ProceduresChanged();
    partial void OnStats_State_ConsultationsChanging(System.Nullable<double> value);
    partial void OnStats_State_ConsultationsChanged();
    partial void OnStats_State_ProceduresChanging(System.Nullable<double> value);
    partial void OnStats_State_ProceduresChanged();
    partial void OnStats_Private_Procedures_IncomeChanging(System.Nullable<double> value);
    partial void OnStats_Private_Procedures_IncomeChanged();
    partial void OnStats_State_Procedures_IncomeChanging(System.Nullable<double> value);
    partial void OnStats_State_Procedures_IncomeChanged();
    partial void OnStats_Private_Consultations_IncomeChanging(System.Nullable<double> value);
    partial void OnStats_Private_Consultations_IncomeChanged();
    partial void OnStats_State_Consultations_IncomeChanging(System.Nullable<double> value);
    partial void OnStats_State_Consultations_IncomeChanged();
    partial void OnStats_CaesariansChanging(System.Nullable<double> value);
    partial void OnStats_CaesariansChanged();
    partial void OnStats_NVDChanging(System.Nullable<double> value);
    partial void OnStats_NVDChanged();
    partial void OnStats_HysterectomiesChanging(System.Nullable<double> value);
    partial void OnStats_HysterectomiesChanged();
    partial void OnCover_Current_ProviderChanging(string value);
    partial void OnCover_Current_ProviderChanged();
    partial void OnCover_Current_YearsChanging(System.Nullable<int> value);
    partial void OnCover_Current_YearsChanged();
    partial void OnStats_SurgeryChanging(string value);
    partial void OnStats_SurgeryChanged();
    partial void OnClaims_EnquiriesChanging(string value);
    partial void OnClaims_EnquiriesChanged();
    partial void OnClaims_ActualChanging(string value);
    partial void OnClaims_ActualChanged();
    partial void OnClaims_HPCSAChanging(string value);
    partial void OnClaims_HPCSAChanged();
    partial void OnClaims_CircumstancesChanging(string value);
    partial void OnClaims_CircumstancesChanged();
    partial void OnMaterial_FactsChanging(string value);
    partial void OnMaterial_FactsChanged();
    partial void OnDeclaration_QuoteChanging(System.Nullable<bool> value);
    partial void OnDeclaration_QuoteChanged();
    partial void OnAcceptance_QuoteChanging(System.Nullable<System.DateTime> value);
    partial void OnAcceptance_QuoteChanged();
    partial void OnPremium_Period_IDChanging(System.Nullable<int> value);
    partial void OnPremium_Period_IDChanged();
    partial void OnPremium_PeriodChanging(string value);
    partial void OnPremium_PeriodChanged();
    partial void OnFactility_Type_IDChanging(System.Nullable<int> value);
    partial void OnFactility_Type_IDChanged();
    partial void OnFactility_TypeChanging(string value);
    partial void OnFactility_TypeChanged();
    partial void OnStats_Grid_IDChanging(System.Nullable<int> value);
    partial void OnStats_Grid_IDChanged();
    partial void OnStats_Number_Of_Nursing_StaffChanging(System.Nullable<int> value);
    partial void OnStats_Number_Of_Nursing_StaffChanged();
    partial void OnStats_Number_of_Births_AnnualChanging(System.Nullable<int> value);
    partial void OnStats_Number_of_Births_AnnualChanged();
    partial void OnStats_Number_of_Deaths_AnnualChanging(System.Nullable<int> value);
    partial void OnStats_Number_of_Deaths_AnnualChanged();
    partial void OnAuthorize_ClaimsChanging(System.Nullable<bool> value);
    partial void OnAuthorize_ClaimsChanged();
    partial void OnAuthorize_Claims_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnAuthorize_Claims_DateChanged();
    #endregion
		
		public QuoteRequest()
		{
			this._QuoteFeedbacks = new EntitySet<QuoteFeedback>(new Action<QuoteFeedback>(this.attach_QuoteFeedbacks), new Action<QuoteFeedback>(this.detach_QuoteFeedbacks));
			this._QuoteFeedbacks1 = new EntitySet<QuoteFeedback>(new Action<QuoteFeedback>(this.attach_QuoteFeedbacks1), new Action<QuoteFeedback>(this.detach_QuoteFeedbacks1));
			this._Business_Discipline1 = default(EntityRef<Business_Discipline>);
			this._Businesstype = default(EntityRef<Businesstype>);
			this._Limit_PerClaim1 = default(EntityRef<Limit_PerClaim>);
			this._Limit_PerPeriod1 = default(EntityRef<Limit_PerPeriod>);
			this._Factility_Type1 = default(EntityRef<Factility_Type>);
			this._Stats_Grid = default(EntityRef<Stats_Grid>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequest_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuoteRequest_ID
		{
			get
			{
				return this._QuoteRequest_ID;
			}
			set
			{
				if ((this._QuoteRequest_ID != value))
				{
					this.OnQuoteRequest_IDChanging(value);
					this.SendPropertyChanging();
					this._QuoteRequest_ID = value;
					this.SendPropertyChanged("QuoteRequest_ID");
					this.OnQuoteRequest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteType", DbType="Int")]
		public System.Nullable<int> QuoteType
		{
			get
			{
				return this._QuoteType;
			}
			set
			{
				if ((this._QuoteType != value))
				{
					this.OnQuoteTypeChanging(value);
					this.SendPropertyChanging();
					this._QuoteType = value;
					this.SendPropertyChanged("QuoteType");
					this.OnQuoteTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", DbType="Int NOT NULL")]
		public int ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					this.OnClientMaster_IDChanging(value);
					this.SendPropertyChanging();
					this._ClientMaster_ID = value;
					this.SendPropertyChanged("ClientMaster_ID");
					this.OnClientMaster_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Businesstype_ID", DbType="Int")]
		public System.Nullable<int> Businesstype_ID
		{
			get
			{
				return this._Businesstype_ID;
			}
			set
			{
				if ((this._Businesstype_ID != value))
				{
					if (this._Businesstype.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinesstype_IDChanging(value);
					this.SendPropertyChanging();
					this._Businesstype_ID = value;
					this.SendPropertyChanged("Businesstype_ID");
					this.OnBusinesstype_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Type", DbType="NVarChar(50)")]
		public string Business_Type
		{
			get
			{
				return this._Business_Type;
			}
			set
			{
				if ((this._Business_Type != value))
				{
					this.OnBusiness_TypeChanging(value);
					this.SendPropertyChanging();
					this._Business_Type = value;
					this.SendPropertyChanged("Business_Type");
					this.OnBusiness_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Discipline_ID", DbType="Int NOT NULL")]
		public int Business_Discipline_ID
		{
			get
			{
				return this._Business_Discipline_ID;
			}
			set
			{
				if ((this._Business_Discipline_ID != value))
				{
					if (this._Business_Discipline1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusiness_Discipline_IDChanging(value);
					this.SendPropertyChanging();
					this._Business_Discipline_ID = value;
					this.SendPropertyChanged("Business_Discipline_ID");
					this.OnBusiness_Discipline_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business_Discipline", DbType="NVarChar(50)")]
		public string Business_Discipline
		{
			get
			{
				return this._Business_Discipline;
			}
			set
			{
				if ((this._Business_Discipline != value))
				{
					this.OnBusiness_DisciplineChanging(value);
					this.SendPropertyChanging();
					this._Business_Discipline = value;
					this.SendPropertyChanged("Business_Discipline");
					this.OnBusiness_DisciplineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerClaim_ID", DbType="Int")]
		public System.Nullable<int> Limit_PerClaim_ID
		{
			get
			{
				return this._Limit_PerClaim_ID;
			}
			set
			{
				if ((this._Limit_PerClaim_ID != value))
				{
					if (this._Limit_PerClaim1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimit_PerClaim_IDChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerClaim_ID = value;
					this.SendPropertyChanged("Limit_PerClaim_ID");
					this.OnLimit_PerClaim_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerClaim", DbType="NVarChar(50)")]
		public string Limit_PerClaim
		{
			get
			{
				return this._Limit_PerClaim;
			}
			set
			{
				if ((this._Limit_PerClaim != value))
				{
					this.OnLimit_PerClaimChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerClaim = value;
					this.SendPropertyChanged("Limit_PerClaim");
					this.OnLimit_PerClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerPeriod_ID", DbType="Int")]
		public System.Nullable<int> Limit_PerPeriod_ID
		{
			get
			{
				return this._Limit_PerPeriod_ID;
			}
			set
			{
				if ((this._Limit_PerPeriod_ID != value))
				{
					if (this._Limit_PerPeriod1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLimit_PerPeriod_IDChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerPeriod_ID = value;
					this.SendPropertyChanged("Limit_PerPeriod_ID");
					this.OnLimit_PerPeriod_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Limit_PerPeriod", DbType="NVarChar(50)")]
		public string Limit_PerPeriod
		{
			get
			{
				return this._Limit_PerPeriod;
			}
			set
			{
				if ((this._Limit_PerPeriod != value))
				{
					this.OnLimit_PerPeriodChanging(value);
					this.SendPropertyChanging();
					this._Limit_PerPeriod = value;
					this.SendPropertyChanged("Limit_PerPeriod");
					this.OnLimit_PerPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Private_Consultations", DbType="Float")]
		public System.Nullable<double> Stats_Private_Consultations
		{
			get
			{
				return this._Stats_Private_Consultations;
			}
			set
			{
				if ((this._Stats_Private_Consultations != value))
				{
					this.OnStats_Private_ConsultationsChanging(value);
					this.SendPropertyChanging();
					this._Stats_Private_Consultations = value;
					this.SendPropertyChanged("Stats_Private_Consultations");
					this.OnStats_Private_ConsultationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Private_Procedures", DbType="Float")]
		public System.Nullable<double> Stats_Private_Procedures
		{
			get
			{
				return this._Stats_Private_Procedures;
			}
			set
			{
				if ((this._Stats_Private_Procedures != value))
				{
					this.OnStats_Private_ProceduresChanging(value);
					this.SendPropertyChanging();
					this._Stats_Private_Procedures = value;
					this.SendPropertyChanged("Stats_Private_Procedures");
					this.OnStats_Private_ProceduresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_State_Consultations", DbType="Float")]
		public System.Nullable<double> Stats_State_Consultations
		{
			get
			{
				return this._Stats_State_Consultations;
			}
			set
			{
				if ((this._Stats_State_Consultations != value))
				{
					this.OnStats_State_ConsultationsChanging(value);
					this.SendPropertyChanging();
					this._Stats_State_Consultations = value;
					this.SendPropertyChanged("Stats_State_Consultations");
					this.OnStats_State_ConsultationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_State_Procedures", DbType="Float")]
		public System.Nullable<double> Stats_State_Procedures
		{
			get
			{
				return this._Stats_State_Procedures;
			}
			set
			{
				if ((this._Stats_State_Procedures != value))
				{
					this.OnStats_State_ProceduresChanging(value);
					this.SendPropertyChanging();
					this._Stats_State_Procedures = value;
					this.SendPropertyChanged("Stats_State_Procedures");
					this.OnStats_State_ProceduresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Private_Procedures_Income", DbType="Float")]
		public System.Nullable<double> Stats_Private_Procedures_Income
		{
			get
			{
				return this._Stats_Private_Procedures_Income;
			}
			set
			{
				if ((this._Stats_Private_Procedures_Income != value))
				{
					this.OnStats_Private_Procedures_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Stats_Private_Procedures_Income = value;
					this.SendPropertyChanged("Stats_Private_Procedures_Income");
					this.OnStats_Private_Procedures_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_State_Procedures_Income", DbType="Float")]
		public System.Nullable<double> Stats_State_Procedures_Income
		{
			get
			{
				return this._Stats_State_Procedures_Income;
			}
			set
			{
				if ((this._Stats_State_Procedures_Income != value))
				{
					this.OnStats_State_Procedures_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Stats_State_Procedures_Income = value;
					this.SendPropertyChanged("Stats_State_Procedures_Income");
					this.OnStats_State_Procedures_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Private_Consultations_Income", DbType="Float")]
		public System.Nullable<double> Stats_Private_Consultations_Income
		{
			get
			{
				return this._Stats_Private_Consultations_Income;
			}
			set
			{
				if ((this._Stats_Private_Consultations_Income != value))
				{
					this.OnStats_Private_Consultations_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Stats_Private_Consultations_Income = value;
					this.SendPropertyChanged("Stats_Private_Consultations_Income");
					this.OnStats_Private_Consultations_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_State_Consultations_Income", DbType="Float")]
		public System.Nullable<double> Stats_State_Consultations_Income
		{
			get
			{
				return this._Stats_State_Consultations_Income;
			}
			set
			{
				if ((this._Stats_State_Consultations_Income != value))
				{
					this.OnStats_State_Consultations_IncomeChanging(value);
					this.SendPropertyChanging();
					this._Stats_State_Consultations_Income = value;
					this.SendPropertyChanged("Stats_State_Consultations_Income");
					this.OnStats_State_Consultations_IncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Caesarians", DbType="Float")]
		public System.Nullable<double> Stats_Caesarians
		{
			get
			{
				return this._Stats_Caesarians;
			}
			set
			{
				if ((this._Stats_Caesarians != value))
				{
					this.OnStats_CaesariansChanging(value);
					this.SendPropertyChanging();
					this._Stats_Caesarians = value;
					this.SendPropertyChanged("Stats_Caesarians");
					this.OnStats_CaesariansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_NVD", DbType="Float")]
		public System.Nullable<double> Stats_NVD
		{
			get
			{
				return this._Stats_NVD;
			}
			set
			{
				if ((this._Stats_NVD != value))
				{
					this.OnStats_NVDChanging(value);
					this.SendPropertyChanging();
					this._Stats_NVD = value;
					this.SendPropertyChanged("Stats_NVD");
					this.OnStats_NVDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Hysterectomies", DbType="Float")]
		public System.Nullable<double> Stats_Hysterectomies
		{
			get
			{
				return this._Stats_Hysterectomies;
			}
			set
			{
				if ((this._Stats_Hysterectomies != value))
				{
					this.OnStats_HysterectomiesChanging(value);
					this.SendPropertyChanging();
					this._Stats_Hysterectomies = value;
					this.SendPropertyChanged("Stats_Hysterectomies");
					this.OnStats_HysterectomiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover_Current_Provider", DbType="NVarChar(50)")]
		public string Cover_Current_Provider
		{
			get
			{
				return this._Cover_Current_Provider;
			}
			set
			{
				if ((this._Cover_Current_Provider != value))
				{
					this.OnCover_Current_ProviderChanging(value);
					this.SendPropertyChanging();
					this._Cover_Current_Provider = value;
					this.SendPropertyChanged("Cover_Current_Provider");
					this.OnCover_Current_ProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover_Current_Years", DbType="Int")]
		public System.Nullable<int> Cover_Current_Years
		{
			get
			{
				return this._Cover_Current_Years;
			}
			set
			{
				if ((this._Cover_Current_Years != value))
				{
					this.OnCover_Current_YearsChanging(value);
					this.SendPropertyChanging();
					this._Cover_Current_Years = value;
					this.SendPropertyChanged("Cover_Current_Years");
					this.OnCover_Current_YearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Surgery", DbType="NVarChar(50)")]
		public string Stats_Surgery
		{
			get
			{
				return this._Stats_Surgery;
			}
			set
			{
				if ((this._Stats_Surgery != value))
				{
					this.OnStats_SurgeryChanging(value);
					this.SendPropertyChanging();
					this._Stats_Surgery = value;
					this.SendPropertyChanged("Stats_Surgery");
					this.OnStats_SurgeryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Enquiries", DbType="NVarChar(50)")]
		public string Claims_Enquiries
		{
			get
			{
				return this._Claims_Enquiries;
			}
			set
			{
				if ((this._Claims_Enquiries != value))
				{
					this.OnClaims_EnquiriesChanging(value);
					this.SendPropertyChanging();
					this._Claims_Enquiries = value;
					this.SendPropertyChanged("Claims_Enquiries");
					this.OnClaims_EnquiriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Actual", DbType="NVarChar(50)")]
		public string Claims_Actual
		{
			get
			{
				return this._Claims_Actual;
			}
			set
			{
				if ((this._Claims_Actual != value))
				{
					this.OnClaims_ActualChanging(value);
					this.SendPropertyChanging();
					this._Claims_Actual = value;
					this.SendPropertyChanged("Claims_Actual");
					this.OnClaims_ActualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_HPCSA", DbType="NVarChar(50)")]
		public string Claims_HPCSA
		{
			get
			{
				return this._Claims_HPCSA;
			}
			set
			{
				if ((this._Claims_HPCSA != value))
				{
					this.OnClaims_HPCSAChanging(value);
					this.SendPropertyChanging();
					this._Claims_HPCSA = value;
					this.SendPropertyChanged("Claims_HPCSA");
					this.OnClaims_HPCSAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claims_Circumstances", DbType="NVarChar(50)")]
		public string Claims_Circumstances
		{
			get
			{
				return this._Claims_Circumstances;
			}
			set
			{
				if ((this._Claims_Circumstances != value))
				{
					this.OnClaims_CircumstancesChanging(value);
					this.SendPropertyChanging();
					this._Claims_Circumstances = value;
					this.SendPropertyChanged("Claims_Circumstances");
					this.OnClaims_CircumstancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material_Facts", DbType="NVarChar(50)")]
		public string Material_Facts
		{
			get
			{
				return this._Material_Facts;
			}
			set
			{
				if ((this._Material_Facts != value))
				{
					this.OnMaterial_FactsChanging(value);
					this.SendPropertyChanging();
					this._Material_Facts = value;
					this.SendPropertyChanged("Material_Facts");
					this.OnMaterial_FactsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Declaration_Quote", DbType="Bit")]
		public System.Nullable<bool> Declaration_Quote
		{
			get
			{
				return this._Declaration_Quote;
			}
			set
			{
				if ((this._Declaration_Quote != value))
				{
					this.OnDeclaration_QuoteChanging(value);
					this.SendPropertyChanging();
					this._Declaration_Quote = value;
					this.SendPropertyChanged("Declaration_Quote");
					this.OnDeclaration_QuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance_Quote", DbType="DateTime")]
		public System.Nullable<System.DateTime> Acceptance_Quote
		{
			get
			{
				return this._Acceptance_Quote;
			}
			set
			{
				if ((this._Acceptance_Quote != value))
				{
					this.OnAcceptance_QuoteChanging(value);
					this.SendPropertyChanging();
					this._Acceptance_Quote = value;
					this.SendPropertyChanged("Acceptance_Quote");
					this.OnAcceptance_QuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premium_Period_ID", DbType="Int")]
		public System.Nullable<int> Premium_Period_ID
		{
			get
			{
				return this._Premium_Period_ID;
			}
			set
			{
				if ((this._Premium_Period_ID != value))
				{
					this.OnPremium_Period_IDChanging(value);
					this.SendPropertyChanging();
					this._Premium_Period_ID = value;
					this.SendPropertyChanged("Premium_Period_ID");
					this.OnPremium_Period_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premium_Period", DbType="NVarChar(50)")]
		public string Premium_Period
		{
			get
			{
				return this._Premium_Period;
			}
			set
			{
				if ((this._Premium_Period != value))
				{
					this.OnPremium_PeriodChanging(value);
					this.SendPropertyChanging();
					this._Premium_Period = value;
					this.SendPropertyChanged("Premium_Period");
					this.OnPremium_PeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factility_Type_ID", DbType="Int")]
		public System.Nullable<int> Factility_Type_ID
		{
			get
			{
				return this._Factility_Type_ID;
			}
			set
			{
				if ((this._Factility_Type_ID != value))
				{
					if (this._Factility_Type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactility_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Factility_Type_ID = value;
					this.SendPropertyChanged("Factility_Type_ID");
					this.OnFactility_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factility_Type", DbType="NVarChar(50)")]
		public string Factility_Type
		{
			get
			{
				return this._Factility_Type;
			}
			set
			{
				if ((this._Factility_Type != value))
				{
					this.OnFactility_TypeChanging(value);
					this.SendPropertyChanging();
					this._Factility_Type = value;
					this.SendPropertyChanged("Factility_Type");
					this.OnFactility_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Grid_ID", DbType="Int")]
		public System.Nullable<int> Stats_Grid_ID
		{
			get
			{
				return this._Stats_Grid_ID;
			}
			set
			{
				if ((this._Stats_Grid_ID != value))
				{
					if (this._Stats_Grid.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStats_Grid_IDChanging(value);
					this.SendPropertyChanging();
					this._Stats_Grid_ID = value;
					this.SendPropertyChanged("Stats_Grid_ID");
					this.OnStats_Grid_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Number_Of_Nursing_Staff", DbType="Int")]
		public System.Nullable<int> Stats_Number_Of_Nursing_Staff
		{
			get
			{
				return this._Stats_Number_Of_Nursing_Staff;
			}
			set
			{
				if ((this._Stats_Number_Of_Nursing_Staff != value))
				{
					this.OnStats_Number_Of_Nursing_StaffChanging(value);
					this.SendPropertyChanging();
					this._Stats_Number_Of_Nursing_Staff = value;
					this.SendPropertyChanged("Stats_Number_Of_Nursing_Staff");
					this.OnStats_Number_Of_Nursing_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Number_of_Births_Annual", DbType="Int")]
		public System.Nullable<int> Stats_Number_of_Births_Annual
		{
			get
			{
				return this._Stats_Number_of_Births_Annual;
			}
			set
			{
				if ((this._Stats_Number_of_Births_Annual != value))
				{
					this.OnStats_Number_of_Births_AnnualChanging(value);
					this.SendPropertyChanging();
					this._Stats_Number_of_Births_Annual = value;
					this.SendPropertyChanged("Stats_Number_of_Births_Annual");
					this.OnStats_Number_of_Births_AnnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats_Number_of_Deaths_Annual", DbType="Int")]
		public System.Nullable<int> Stats_Number_of_Deaths_Annual
		{
			get
			{
				return this._Stats_Number_of_Deaths_Annual;
			}
			set
			{
				if ((this._Stats_Number_of_Deaths_Annual != value))
				{
					this.OnStats_Number_of_Deaths_AnnualChanging(value);
					this.SendPropertyChanging();
					this._Stats_Number_of_Deaths_Annual = value;
					this.SendPropertyChanged("Stats_Number_of_Deaths_Annual");
					this.OnStats_Number_of_Deaths_AnnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorize_Claims", DbType="Bit")]
		public System.Nullable<bool> Authorize_Claims
		{
			get
			{
				return this._Authorize_Claims;
			}
			set
			{
				if ((this._Authorize_Claims != value))
				{
					this.OnAuthorize_ClaimsChanging(value);
					this.SendPropertyChanging();
					this._Authorize_Claims = value;
					this.SendPropertyChanged("Authorize_Claims");
					this.OnAuthorize_ClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorize_Claims_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Authorize_Claims_Date
		{
			get
			{
				return this._Authorize_Claims_Date;
			}
			set
			{
				if ((this._Authorize_Claims_Date != value))
				{
					this.OnAuthorize_Claims_DateChanging(value);
					this.SendPropertyChanging();
					this._Authorize_Claims_Date = value;
					this.SendPropertyChanged("Authorize_Claims_Date");
					this.OnAuthorize_Claims_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteRequest_QuoteFeedback", Storage="_QuoteFeedbacks", ThisKey="QuoteRequest_ID", OtherKey="QuoteRequest_ID")]
		public EntitySet<QuoteFeedback> QuoteFeedbacks
		{
			get
			{
				return this._QuoteFeedbacks;
			}
			set
			{
				this._QuoteFeedbacks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteRequest_QuoteFeedback1", Storage="_QuoteFeedbacks1", ThisKey="QuoteRequest_ID", OtherKey="QuoteRequest_ID")]
		public EntitySet<QuoteFeedback> QuoteFeedbacks1
		{
			get
			{
				return this._QuoteFeedbacks1;
			}
			set
			{
				this._QuoteFeedbacks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Business_Discipline_QuoteRequest", Storage="_Business_Discipline1", ThisKey="Business_Discipline_ID", OtherKey="Business_Discipline_ID", IsForeignKey=true)]
		public Business_Discipline Business_Discipline1
		{
			get
			{
				return this._Business_Discipline1.Entity;
			}
			set
			{
				Business_Discipline previousValue = this._Business_Discipline1.Entity;
				if (((previousValue != value) 
							|| (this._Business_Discipline1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Business_Discipline1.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Business_Discipline1.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Business_Discipline_ID = value.Business_Discipline_ID;
					}
					else
					{
						this._Business_Discipline_ID = default(int);
					}
					this.SendPropertyChanged("Business_Discipline1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Businesstype_QuoteRequest", Storage="_Businesstype", ThisKey="Businesstype_ID", OtherKey="Businesstype_ID", IsForeignKey=true)]
		public Businesstype Businesstype
		{
			get
			{
				return this._Businesstype.Entity;
			}
			set
			{
				Businesstype previousValue = this._Businesstype.Entity;
				if (((previousValue != value) 
							|| (this._Businesstype.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Businesstype.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Businesstype.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Businesstype_ID = value.Businesstype_ID;
					}
					else
					{
						this._Businesstype_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Businesstype");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_PerClaim_QuoteRequest", Storage="_Limit_PerClaim1", ThisKey="Limit_PerClaim_ID", OtherKey="Limit_PerClaim_ID", IsForeignKey=true)]
		public Limit_PerClaim Limit_PerClaim1
		{
			get
			{
				return this._Limit_PerClaim1.Entity;
			}
			set
			{
				Limit_PerClaim previousValue = this._Limit_PerClaim1.Entity;
				if (((previousValue != value) 
							|| (this._Limit_PerClaim1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Limit_PerClaim1.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Limit_PerClaim1.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Limit_PerClaim_ID = value.Limit_PerClaim_ID;
					}
					else
					{
						this._Limit_PerClaim_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Limit_PerClaim1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Limit_PerPeriod_QuoteRequest", Storage="_Limit_PerPeriod1", ThisKey="Limit_PerPeriod_ID", OtherKey="Limit_PerPeriod_ID", IsForeignKey=true)]
		public Limit_PerPeriod Limit_PerPeriod1
		{
			get
			{
				return this._Limit_PerPeriod1.Entity;
			}
			set
			{
				Limit_PerPeriod previousValue = this._Limit_PerPeriod1.Entity;
				if (((previousValue != value) 
							|| (this._Limit_PerPeriod1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Limit_PerPeriod1.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Limit_PerPeriod1.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Limit_PerPeriod_ID = value.Limit_PerPeriod_ID;
					}
					else
					{
						this._Limit_PerPeriod_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Limit_PerPeriod1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factility_Type_QuoteRequest", Storage="_Factility_Type1", ThisKey="Factility_Type_ID", OtherKey="Factility_Type_ID", IsForeignKey=true)]
		public Factility_Type Factility_Type1
		{
			get
			{
				return this._Factility_Type1.Entity;
			}
			set
			{
				Factility_Type previousValue = this._Factility_Type1.Entity;
				if (((previousValue != value) 
							|| (this._Factility_Type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factility_Type1.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Factility_Type1.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Factility_Type_ID = value.Factility_Type_ID;
					}
					else
					{
						this._Factility_Type_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Factility_Type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stats_Grid_QuoteRequest", Storage="_Stats_Grid", ThisKey="Stats_Grid_ID", OtherKey="Stats_grid_ID", IsForeignKey=true)]
		public Stats_Grid Stats_Grid
		{
			get
			{
				return this._Stats_Grid.Entity;
			}
			set
			{
				Stats_Grid previousValue = this._Stats_Grid.Entity;
				if (((previousValue != value) 
							|| (this._Stats_Grid.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stats_Grid.Entity = null;
						previousValue.QuoteRequests.Remove(this);
					}
					this._Stats_Grid.Entity = value;
					if ((value != null))
					{
						value.QuoteRequests.Add(this);
						this._Stats_Grid_ID = value.Stats_grid_ID;
					}
					else
					{
						this._Stats_Grid_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stats_Grid");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteFeedbacks(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRequest = this;
		}
		
		private void detach_QuoteFeedbacks(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRequest = null;
		}
		
		private void attach_QuoteFeedbacks1(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRequest1 = this;
		}
		
		private void detach_QuoteFeedbacks1(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.QuoteRequest1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuoteFeedback")]
	public partial class QuoteFeedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _QuoteFeedback_ID;
		
		private int _QuoteRequest_ID;
		
		private int _Insurer_ID;
		
		private string _Insurer;
		
		private double _Indemnity_limit;
		
		private double _Premium_Annual;
		
		private double _Excess;
		
		private string _Excess_Type;
		
		private string _Comments;
		
		private string _Wording;
		
		private System.DateTime _Quote_Processed_Datetime;
		
		private System.DateTime _Quote_Expiry_Datetime;
		
		private bool _Active_YN;
		
		private EntitySet<ClientInsurance> _ClientInsurances;
		
		private EntityRef<QuoteRequest> _QuoteRequest;
		
		private EntityRef<QuoteRequest> _QuoteRequest1;
		
		private EntityRef<Insurer> _Insurer1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQuoteFeedback_IDChanging(int value);
    partial void OnQuoteFeedback_IDChanged();
    partial void OnQuoteRequest_IDChanging(int value);
    partial void OnQuoteRequest_IDChanged();
    partial void OnInsurer_IDChanging(int value);
    partial void OnInsurer_IDChanged();
    partial void OnInsurerChanging(string value);
    partial void OnInsurerChanged();
    partial void OnIndemnity_limitChanging(double value);
    partial void OnIndemnity_limitChanged();
    partial void OnPremium_AnnualChanging(double value);
    partial void OnPremium_AnnualChanged();
    partial void OnExcessChanging(double value);
    partial void OnExcessChanged();
    partial void OnExcess_TypeChanging(string value);
    partial void OnExcess_TypeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnWordingChanging(string value);
    partial void OnWordingChanged();
    partial void OnQuote_Processed_DatetimeChanging(System.DateTime value);
    partial void OnQuote_Processed_DatetimeChanged();
    partial void OnQuote_Expiry_DatetimeChanging(System.DateTime value);
    partial void OnQuote_Expiry_DatetimeChanged();
    partial void OnActive_YNChanging(bool value);
    partial void OnActive_YNChanged();
    #endregion
		
		public QuoteFeedback()
		{
			this._ClientInsurances = new EntitySet<ClientInsurance>(new Action<ClientInsurance>(this.attach_ClientInsurances), new Action<ClientInsurance>(this.detach_ClientInsurances));
			this._QuoteRequest = default(EntityRef<QuoteRequest>);
			this._QuoteRequest1 = default(EntityRef<QuoteRequest>);
			this._Insurer1 = default(EntityRef<Insurer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteFeedback_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int QuoteFeedback_ID
		{
			get
			{
				return this._QuoteFeedback_ID;
			}
			set
			{
				if ((this._QuoteFeedback_ID != value))
				{
					this.OnQuoteFeedback_IDChanging(value);
					this.SendPropertyChanging();
					this._QuoteFeedback_ID = value;
					this.SendPropertyChanged("QuoteFeedback_ID");
					this.OnQuoteFeedback_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequest_ID", DbType="Int NOT NULL")]
		public int QuoteRequest_ID
		{
			get
			{
				return this._QuoteRequest_ID;
			}
			set
			{
				if ((this._QuoteRequest_ID != value))
				{
					if ((this._QuoteRequest.HasLoadedOrAssignedValue || this._QuoteRequest1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuoteRequest_IDChanging(value);
					this.SendPropertyChanging();
					this._QuoteRequest_ID = value;
					this.SendPropertyChanged("QuoteRequest_ID");
					this.OnQuoteRequest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurer_ID", DbType="Int NOT NULL")]
		public int Insurer_ID
		{
			get
			{
				return this._Insurer_ID;
			}
			set
			{
				if ((this._Insurer_ID != value))
				{
					if (this._Insurer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInsurer_IDChanging(value);
					this.SendPropertyChanging();
					this._Insurer_ID = value;
					this.SendPropertyChanged("Insurer_ID");
					this.OnInsurer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurer", DbType="NVarChar(50)")]
		public string Insurer
		{
			get
			{
				return this._Insurer;
			}
			set
			{
				if ((this._Insurer != value))
				{
					this.OnInsurerChanging(value);
					this.SendPropertyChanging();
					this._Insurer = value;
					this.SendPropertyChanged("Insurer");
					this.OnInsurerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indemnity_limit", DbType="Float NOT NULL")]
		public double Indemnity_limit
		{
			get
			{
				return this._Indemnity_limit;
			}
			set
			{
				if ((this._Indemnity_limit != value))
				{
					this.OnIndemnity_limitChanging(value);
					this.SendPropertyChanging();
					this._Indemnity_limit = value;
					this.SendPropertyChanged("Indemnity_limit");
					this.OnIndemnity_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Premium_Annual", DbType="Float NOT NULL")]
		public double Premium_Annual
		{
			get
			{
				return this._Premium_Annual;
			}
			set
			{
				if ((this._Premium_Annual != value))
				{
					this.OnPremium_AnnualChanging(value);
					this.SendPropertyChanging();
					this._Premium_Annual = value;
					this.SendPropertyChanged("Premium_Annual");
					this.OnPremium_AnnualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excess", DbType="Float NOT NULL")]
		public double Excess
		{
			get
			{
				return this._Excess;
			}
			set
			{
				if ((this._Excess != value))
				{
					this.OnExcessChanging(value);
					this.SendPropertyChanging();
					this._Excess = value;
					this.SendPropertyChanged("Excess");
					this.OnExcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excess_Type", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Excess_Type
		{
			get
			{
				return this._Excess_Type;
			}
			set
			{
				if ((this._Excess_Type != value))
				{
					this.OnExcess_TypeChanging(value);
					this.SendPropertyChanging();
					this._Excess_Type = value;
					this.SendPropertyChanged("Excess_Type");
					this.OnExcess_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wording", DbType="NVarChar(1000)")]
		public string Wording
		{
			get
			{
				return this._Wording;
			}
			set
			{
				if ((this._Wording != value))
				{
					this.OnWordingChanging(value);
					this.SendPropertyChanging();
					this._Wording = value;
					this.SendPropertyChanged("Wording");
					this.OnWordingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quote_Processed_Datetime", DbType="DateTime NOT NULL")]
		public System.DateTime Quote_Processed_Datetime
		{
			get
			{
				return this._Quote_Processed_Datetime;
			}
			set
			{
				if ((this._Quote_Processed_Datetime != value))
				{
					this.OnQuote_Processed_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Quote_Processed_Datetime = value;
					this.SendPropertyChanged("Quote_Processed_Datetime");
					this.OnQuote_Processed_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quote_Expiry_Datetime", DbType="DateTime NOT NULL")]
		public System.DateTime Quote_Expiry_Datetime
		{
			get
			{
				return this._Quote_Expiry_Datetime;
			}
			set
			{
				if ((this._Quote_Expiry_Datetime != value))
				{
					this.OnQuote_Expiry_DatetimeChanging(value);
					this.SendPropertyChanging();
					this._Quote_Expiry_Datetime = value;
					this.SendPropertyChanged("Quote_Expiry_Datetime");
					this.OnQuote_Expiry_DatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active_YN", DbType="Bit NOT NULL")]
		public bool Active_YN
		{
			get
			{
				return this._Active_YN;
			}
			set
			{
				if ((this._Active_YN != value))
				{
					this.OnActive_YNChanging(value);
					this.SendPropertyChanging();
					this._Active_YN = value;
					this.SendPropertyChanged("Active_YN");
					this.OnActive_YNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteFeedback_ClientInsurance", Storage="_ClientInsurances", ThisKey="QuoteFeedback_ID", OtherKey="QuoteFeedback_ID")]
		public EntitySet<ClientInsurance> ClientInsurances
		{
			get
			{
				return this._ClientInsurances;
			}
			set
			{
				this._ClientInsurances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteRequest_QuoteFeedback", Storage="_QuoteRequest", ThisKey="QuoteRequest_ID", OtherKey="QuoteRequest_ID", IsForeignKey=true)]
		public QuoteRequest QuoteRequest
		{
			get
			{
				return this._QuoteRequest.Entity;
			}
			set
			{
				QuoteRequest previousValue = this._QuoteRequest.Entity;
				if (((previousValue != value) 
							|| (this._QuoteRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteRequest.Entity = null;
						previousValue.QuoteFeedbacks.Remove(this);
					}
					this._QuoteRequest.Entity = value;
					if ((value != null))
					{
						value.QuoteFeedbacks.Add(this);
						this._QuoteRequest_ID = value.QuoteRequest_ID;
					}
					else
					{
						this._QuoteRequest_ID = default(int);
					}
					this.SendPropertyChanged("QuoteRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuoteRequest_QuoteFeedback1", Storage="_QuoteRequest1", ThisKey="QuoteRequest_ID", OtherKey="QuoteRequest_ID", IsForeignKey=true)]
		public QuoteRequest QuoteRequest1
		{
			get
			{
				return this._QuoteRequest1.Entity;
			}
			set
			{
				QuoteRequest previousValue = this._QuoteRequest1.Entity;
				if (((previousValue != value) 
							|| (this._QuoteRequest1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuoteRequest1.Entity = null;
						previousValue.QuoteFeedbacks1.Remove(this);
					}
					this._QuoteRequest1.Entity = value;
					if ((value != null))
					{
						value.QuoteFeedbacks1.Add(this);
						this._QuoteRequest_ID = value.QuoteRequest_ID;
					}
					else
					{
						this._QuoteRequest_ID = default(int);
					}
					this.SendPropertyChanged("QuoteRequest1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurer_QuoteFeedback", Storage="_Insurer1", ThisKey="Insurer_ID", OtherKey="Insurer_ID", IsForeignKey=true)]
		public Insurer Insurer1
		{
			get
			{
				return this._Insurer1.Entity;
			}
			set
			{
				Insurer previousValue = this._Insurer1.Entity;
				if (((previousValue != value) 
							|| (this._Insurer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Insurer1.Entity = null;
						previousValue.QuoteFeedbacks.Remove(this);
					}
					this._Insurer1.Entity = value;
					if ((value != null))
					{
						value.QuoteFeedbacks.Add(this);
						this._Insurer_ID = value.Insurer_ID;
					}
					else
					{
						this._Insurer_ID = default(int);
					}
					this.SendPropertyChanged("Insurer1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClientInsurances(ClientInsurance entity)
		{
			this.SendPropertyChanging();
			entity.QuoteFeedback = this;
		}
		
		private void detach_ClientInsurances(ClientInsurance entity)
		{
			this.SendPropertyChanging();
			entity.QuoteFeedback = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Insurer")]
	public partial class Insurer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Insurer_ID;
		
		private string _Insurer_Name;
		
		private string _Wording;
		
		private bool _ActiveYN;
		
		private EntitySet<QuoteFeedback> _QuoteFeedbacks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInsurer_IDChanging(int value);
    partial void OnInsurer_IDChanged();
    partial void OnInsurer_NameChanging(string value);
    partial void OnInsurer_NameChanged();
    partial void OnWordingChanging(string value);
    partial void OnWordingChanged();
    partial void OnActiveYNChanging(bool value);
    partial void OnActiveYNChanged();
    #endregion
		
		public Insurer()
		{
			this._QuoteFeedbacks = new EntitySet<QuoteFeedback>(new Action<QuoteFeedback>(this.attach_QuoteFeedbacks), new Action<QuoteFeedback>(this.detach_QuoteFeedbacks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Insurer_ID
		{
			get
			{
				return this._Insurer_ID;
			}
			set
			{
				if ((this._Insurer_ID != value))
				{
					this.OnInsurer_IDChanging(value);
					this.SendPropertyChanging();
					this._Insurer_ID = value;
					this.SendPropertyChanged("Insurer_ID");
					this.OnInsurer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Insurer_Name", DbType="NVarChar(50)")]
		public string Insurer_Name
		{
			get
			{
				return this._Insurer_Name;
			}
			set
			{
				if ((this._Insurer_Name != value))
				{
					this.OnInsurer_NameChanging(value);
					this.SendPropertyChanging();
					this._Insurer_Name = value;
					this.SendPropertyChanged("Insurer_Name");
					this.OnInsurer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wording", DbType="NVarChar(MAX)")]
		public string Wording
		{
			get
			{
				return this._Wording;
			}
			set
			{
				if ((this._Wording != value))
				{
					this.OnWordingChanging(value);
					this.SendPropertyChanging();
					this._Wording = value;
					this.SendPropertyChanged("Wording");
					this.OnWordingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveYN", DbType="Bit NOT NULL")]
		public bool ActiveYN
		{
			get
			{
				return this._ActiveYN;
			}
			set
			{
				if ((this._ActiveYN != value))
				{
					this.OnActiveYNChanging(value);
					this.SendPropertyChanging();
					this._ActiveYN = value;
					this.SendPropertyChanged("ActiveYN");
					this.OnActiveYNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Insurer_QuoteFeedback", Storage="_QuoteFeedbacks", ThisKey="Insurer_ID", OtherKey="Insurer_ID")]
		public EntitySet<QuoteFeedback> QuoteFeedbacks
		{
			get
			{
				return this._QuoteFeedbacks;
			}
			set
			{
				this._QuoteFeedbacks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QuoteFeedbacks(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Insurer1 = this;
		}
		
		private void detach_QuoteFeedbacks(QuoteFeedback entity)
		{
			this.SendPropertyChanging();
			entity.Insurer1 = null;
		}
	}
	
	public partial class getClientsAwaitingQuotesResult
	{
		
		private int _ClientMaster_ID;
		
		private string _Name_Title;
		
		private string _Name_First;
		
		private string _Name_Last;
		
		private System.DateTime _Date_Birth;
		
		private int _QuoteRequest_ID;
		
		private System.Nullable<System.DateTime> _Acceptance_Quote;
		
		private System.Nullable<int> _QuoteCount;
		
		public getClientsAwaitingQuotesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMaster_ID", DbType="Int NOT NULL")]
		public int ClientMaster_ID
		{
			get
			{
				return this._ClientMaster_ID;
			}
			set
			{
				if ((this._ClientMaster_ID != value))
				{
					this._ClientMaster_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Title
		{
			get
			{
				return this._Name_Title;
			}
			set
			{
				if ((this._Name_Title != value))
				{
					this._Name_Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_First", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_First
		{
			get
			{
				return this._Name_First;
			}
			set
			{
				if ((this._Name_First != value))
				{
					this._Name_First = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Last", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Last
		{
			get
			{
				return this._Name_Last;
			}
			set
			{
				if ((this._Name_Last != value))
				{
					this._Name_Last = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Birth", DbType="DateTime NOT NULL")]
		public System.DateTime Date_Birth
		{
			get
			{
				return this._Date_Birth;
			}
			set
			{
				if ((this._Date_Birth != value))
				{
					this._Date_Birth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteRequest_ID", DbType="Int NOT NULL")]
		public int QuoteRequest_ID
		{
			get
			{
				return this._QuoteRequest_ID;
			}
			set
			{
				if ((this._QuoteRequest_ID != value))
				{
					this._QuoteRequest_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acceptance_Quote", DbType="DateTime")]
		public System.Nullable<System.DateTime> Acceptance_Quote
		{
			get
			{
				return this._Acceptance_Quote;
			}
			set
			{
				if ((this._Acceptance_Quote != value))
				{
					this._Acceptance_Quote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuoteCount", DbType="Int")]
		public System.Nullable<int> QuoteCount
		{
			get
			{
				return this._QuoteCount;
			}
			set
			{
				if ((this._QuoteCount != value))
				{
					this._QuoteCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
